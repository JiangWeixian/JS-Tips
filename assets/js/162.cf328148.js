(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{273:function(r,t,e){"use strict";e.r(t);var o=e(0),n=Object(o.a)({},(function(){var r=this,t=r.$createElement,e=r._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"ch4-解决面试题的思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ch4-解决面试题的思路"}},[r._v("#")]),r._v(" CH4- 解决面试题的思路")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#ch4--%E8%A7%A3%E5%86%B3%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9A%84%E6%80%9D%E8%B7%AF"}},[r._v("CH4- 解决面试题的思路")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF"}},[r._v("解决思路")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E5%8F%89%E6%A0%91%E9%95%9C%E5%83%8F"}},[r._v("二叉树镜像")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5--%E7%94%BB%E5%9B%BE%E5%85%B7%E8%B1%A1%E9%97%AE%E9%A2%98"}},[r._v("顺时针打印矩阵 / 画图具象问题")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E5%BE%97%E5%88%B0%E5%A0%86%E6%A0%88min%E5%85%83%E7%B4%A0--%E4%B8%BE%E4%BE%8B%E5%85%B7%E8%B1%A1%E9%97%AE%E9%A2%98"}},[r._v("得到堆栈min元素 / 举例具象问题")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E5%A0%86%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%92%8C%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97"}},[r._v("堆栈的压入和弹出序列")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E4%BB%8E%E5%B7%A6%E5%BE%80%E5%8F%B3%E8%BE%B9%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91"}},[r._v("从上往下从左往右边打印二叉树")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E7%BB%AD%E9%81%8D%E5%8E%86"}},[r._v("二叉搜索树的后续遍历")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E6%95%B0%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84"}},[r._v("二叉树中和为某数值的路径")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E8%B5%8B%E5%80%BC--%E5%88%86%E8%A7%A3%E8%AE%A9%E9%97%AE%E9%A2%98%E7%AE%80%E5%8D%95%E5%8C%96"}},[r._v("复杂链表赋值 / 分解让问题简单化")])])])])])])]),r._v(" "),e("h2",{attrs:{id:"解决思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[r._v("#")]),r._v(" 解决思路")]),r._v(" "),e("ul",[e("li",[r._v("画图简化问题")])]),r._v(" "),e("p",[r._v("此章节大量用到树结构，对于树，"),e("code",[r._v("JavaScript")]),r._v("中试着使用"),e("code",[r._v("class")]),r._v("关键字创建。对于私有方法和私有属性，并没有像"),e("code",[r._v("function")]),r._v("那么好用。")]),r._v(" "),e("h3",{attrs:{id:"二叉树镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二叉树镜像"}},[r._v("#")]),r._v(" 二叉树镜像")]),r._v(" "),e("p",[r._v("大致意思如图。")]),r._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/JiangWeixian/JS-Books/master/sword2offer/CH4-%E8%A7%A3%E5%86%B3%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E7%9A%84%E6%80%9D%E8%B7%AF/img/%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F.png",alt:"树的镜像"}})]),r._v(" "),e("p",[r._v("同样这也是比较适合递归的方法：")]),r._v(" "),e("ol",[e("li",[r._v("左右子树都需要递归，因此我们能够得到左右子树的"),e("strong",[r._v("根节点下的左右节点")]),r._v("。")]),r._v(" "),e("li",[r._v("只要交换这两个节点")]),r._v(" "),e("li",[r._v("同时递归中返回"),e("strong",[r._v("根节点")])])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/tree/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-mirrorTree.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/mirrorTree.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-mirrorTree.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/mirrorTree.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-mirrorTree.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"顺时针打印矩阵-画图具象问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#顺时针打印矩阵-画图具象问题"}},[r._v("#")]),r._v(" 顺时针打印矩阵 / 画图具象问题")]),r._v(" "),e("p",[r._v("需要考虑如果矩阵不规则不是正方形,情况比较复杂.将问题分解为两个步骤.")]),r._v(" "),e("ol",[e("li",[r._v("分解矩形 - 当打印完成一圈之后,进行内圈的打印")]),r._v(" "),e("li",[r._v("打印 - "),e("strong",[r._v("针对打印一圈的情况,需要正方方向一行,上下方向一列.")])])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("p",[r._v("函数也可以作为参数传递.")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/matrixInCircle.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-matrixInCircle.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/matrixInCicle.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-matrixInCircle.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/matrixInCicle.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-matrixInCircle.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"得到堆栈min元素-举例具象问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#得到堆栈min元素-举例具象问题"}},[r._v("#")]),r._v(" 得到堆栈min元素 / 举例具象问题")]),r._v(" "),e("p",[r._v("关键在于得到"),e("code",[r._v("min")]),r._v("的元素复杂度是"),e("code",[r._v("O(1)")]),r._v(". 很明显需要在每次"),e("code",[r._v("push or pop")]),r._v("的时候更新"),e("code",[r._v("min")]),r._v(".")]),r._v(" "),e("p",[r._v("甚至可以创建"),e("code",[r._v("min")]),r._v("元素的堆栈. 在每次"),e("code",[r._v("push or pop")]),r._v("的时候同步更新"),e("code",[r._v("min")]),r._v(". 典型的"),e("strong",[r._v("空间换时间.")])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/minStack.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-minStack.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/minStack.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-minStack.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/minStack.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-minStack.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"堆栈的压入和弹出序列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#堆栈的压入和弹出序列"}},[r._v("#")]),r._v(" 堆栈的压入和弹出序列")]),r._v(" "),e("p",[r._v("根据两个序列, 分别为弹出和压入. 检测是不是其中压入和弹出是否一一对应.")]),r._v(" "),e("p",[e("strong",[r._v("为什么会有这样的检测?")])]),r._v(" "),e("p",[r._v("因为堆栈来说, 我们压入"),e("code",[r._v("[1, 2, 3, 4]")]),r._v("然后弹出"),e("code",[r._v("4")]),r._v(","),e("strong",[r._v("然后再压入"),e("code",[r._v("[5]")])]),r._v(",然后弹出"),e("code",[r._v("[1, 2, 3]")])]),r._v(" "),e("p",[r._v("可以得到弹出序列为"),e("code",[r._v("[4, 5, 3, 2, 1]")]),r._v("但是没有就弹出得到压入的情况. 因为有可能直接压入"),e("code",[r._v("[1, 2, 3, 4, 5]")]),e("strong",[r._v("对应多种弹出情况")])]),r._v(" "),e("p",[r._v("就是这种一对多的关系,才使得我们需要检测.")]),r._v(" "),e("p",[e("strong",[r._v("思路")])]),r._v(" "),e("ol",[e("li",[r._v("首先压入顺序是明确的, 因为一对多关系中,"),e("strong",[r._v("一是压入关系,而多是弹出关系")])])]),r._v(" "),e("p",[r._v("因此我们首先建立"),e("strong",[r._v("辅助堆栈")])]),r._v(" "),e("ol",[e("li",[r._v("所以我们通过压入的顺序来压入元素到"),e("strong",[r._v("辅助堆栈")]),r._v(", 然后"),e("strong",[r._v("如果压入之后,辅助堆栈的栈顶元素正好是弹出顺序中第一个,那么我们就弹出")])]),r._v(" "),e("li",[r._v("当辅助堆栈为空的时候,其实就是"),e("strong",[r._v("满足了对应关系")])])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/checkStack.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-checkStack.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("p",[r._v("注意"),e("code",[r._v("shift")]),r._v("修改了数组元素, 因此需要重新创建.")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/checkStack.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-checkStack.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/checkStack.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-checkStack.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"从上往下从左往右边打印二叉树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从上往下从左往右边打印二叉树"}},[r._v("#")]),r._v(" 从上往下从左往右边打印二叉树")]),r._v(" "),e("p",[r._v("典型的就是"),e("code",[r._v("BFS")])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/bfs.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-bfs.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/bfs.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-bfs.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/bfs.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-bfs.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"二叉搜索树的后续遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树的后续遍历"}},[r._v("#")]),r._v(" 二叉搜索树的后续遍历")]),r._v(" "),e("p",[e("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%85%83%E6%90%9C%E5%B0%8B%E6%A8%B9",target:"_blank",rel:"noopener noreferrer"}},[r._v("二叉搜索树维基百科定义"),e("OutboundLink")],1),r._v(" - 关键在于左边节点比中间节点大，右边节点比中间节点小。可以观察发现，左边树的所有数值都是比根节点小的。这对于所有树子结构都是成立的。")]),r._v(" "),e("p",[e("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%BA%8C%E5%8F%89%E6%A0%91#%E5%89%8D(%E5%85%88)%E5%BA%8F%E3%80%81%E4%B8%AD%E5%BA%8F%E3%80%81%E5%BE%8C%E5%BA%8F%E9%81%8D%E6%AD%B7",target:"_blank",rel:"noopener noreferrer"}},[r._v("后续遍历"),e("OutboundLink")],1),r._v("的特点为："),e("strong",[r._v("根节点在三个节点中最后被访问")])]),r._v(" "),e("p",[r._v("所以我们可以得到结论：")]),r._v(" "),e("ol",[e("li",[r._v("在整个遍历序列中，最最后一个为树根节点")]),r._v(" "),e("li",[r._v("通过根节点划分左右子树")]),r._v(" "),e("li",[r._v("对于两个划分子树，前面两点同样成立。同时判别是否 "),e("strong",[r._v("二叉搜索树")]),r._v(" 可以通过不断划分序列，找到 "),e("strong",[r._v("最小树结构")]),r._v(" 不断判断这些树结构来判断是否是二叉搜索树。")])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/checkBST.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-checkBST.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/checkBST.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-checkBST.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/checkBST.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-checkBST.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"二叉树中和为某数值的路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二叉树中和为某数值的路径"}},[r._v("#")]),r._v(" 二叉树中和为某数值的路径")]),r._v(" "),e("p",[r._v("其实这里应该设了个陷阱，将"),e("a",{attrs:{href:"https://github.com/JiangWeixian/JS-Books/blob/master/JS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E5%9B%BE/%E5%9B%BE.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[r._v("图")]),e("OutboundLink")],1),r._v("中问题带到了树结构中。")]),r._v(" "),e("p",[r._v("类似图的深度遍历，想要求解这个问题，我们需要解决：")]),r._v(" "),e("ol",[e("li",[r._v("在递归中传递上一步路径，以及上一步累加和")]),r._v(" "),e("li",[r._v("同时采用的遍历方式应该是深度遍历")]),r._v(" "),e("li",[r._v("如果数值和达到了目标，那么就保存，"),e("strong",[r._v("甚至可以直接停止？在树中数值为正的情况下..")])])]),r._v(" "),e("p",[e("strong",[r._v("注意不要以传统的树深度遍历方式求解。因为我们需要对于"),e("code",[r._v("left and right")]),r._v("输入的"),e("code",[r._v("lastPath")]),r._v("是同样的。")])]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/findPath.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-findPath.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/findPath.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-findPath.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/findPath.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-findPath.js"),e("OutboundLink")],1)])]),r._v(" "),e("h3",{attrs:{id:"复杂链表赋值-分解让问题简单化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复杂链表赋值-分解让问题简单化"}},[r._v("#")]),r._v(" 复杂链表赋值 / 分解让问题简单化")]),r._v(" "),e("p",[r._v("这部分以及下面几个问题说是体现了分治的思想，就这道题来说，并没有看出来。")]),r._v(" "),e("p",[r._v("复杂链表如下：")]),r._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/JiangWeixian/JS-Books/master/sword2offer/CH4-%E8%A7%A3%E5%86%B3%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E7%9A%84%E6%80%9D%E8%B7%AF/img/%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8.PNG",alt:"什么是复杂链表"}})]),r._v(" "),e("ol",[e("li",[e("strong",[r._v("直观的")]),r._v(" - 在不增加空间基础上，想要以更快的速度的复制，第一遍复制普通连接部分。第二遍复制跳跃连接部分，同时想要找到跳跃连接目标。就必须遍历整个链表")]),r._v(" "),e("li",[e("strong",[r._v("增加数据空间")]),r._v(" - 在第一遍遍历的时候，就将跳跃连接部分以 "),e("strong",[r._v("键值对形式保存起来")])])]),r._v(" "),e("p",[e("strong",[r._v("文中方法")])]),r._v(" "),e("p",[r._v("很巧妙，也没有额外空间")]),r._v(" "),e("ol",[e("li",[r._v("在每个节点后面增加克隆节点，相当于将克隆节点插入链表，克隆节点就在原始节点下一个。")]),r._v(" "),e("li",[r._v("然后跳跃连接克隆节点("),e("strong",[r._v("如果有跳跃连接的话")]),r._v(")，可以根据 "),e("strong",[r._v("克隆节点就在原始节点下一个，且跳跃连接的克隆节点也在跳跃连接的原始节点后面")]),r._v(" 原则找到。")]),r._v(" "),e("li",[r._v("然后断开原始节点和克隆节点就行。")])]),r._v(" "),e("p",[r._v("好处在于第一步和第二步都是"),e("code",[r._v("O(n)")]),r._v("复杂度的算法。")]),r._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/JiangWeixian/JS-Books/master/sword2offer/CH4-%E8%A7%A3%E5%86%B3%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E7%9A%84%E6%80%9D%E8%B7%AF/img/%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E5%A4%8D%E5%88%B6.PNG",alt:"文中方法"}})]),r._v(" "),e("p",[e("strong",[r._v("Python")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/Python/cloneComplexLinkedList.py",target:"_blank",rel:"noopener noreferrer"}},[r._v("Python-copyComplexLinkedList.py"),e("OutboundLink")],1)])]),r._v(" "),e("p",[e("strong",[r._v("JavaScript")])]),r._v(" "),e("p",[r._v("当你直接传递"),e("code",[r._v("head")]),r._v("进去的时候，设置"),e("code",[r._v("listB = xx")]),r._v("并不能改变"),e("code",[r._v("listB")]),r._v("。因为这属于覆盖，并不能改变引用。")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES5/copyComplexLinkedList.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES5-copyComplexLinkedList.js"),e("OutboundLink")],1)]),r._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/JiangWeixian/Algo/blob/master/Sword2offer/CH4-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/ES6/copyComplexLinkedList.js",target:"_blank",rel:"noopener noreferrer"}},[r._v("ES6-copyComplexLinkedList.js"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);
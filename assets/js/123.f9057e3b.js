(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{253:function(v,t,_){"use strict";_.r(t);var a=_(0),e=Object(a.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"策略模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#策略模式"}},[v._v("#")]),v._v(" 策略模式")]),v._v(" "),_("blockquote",[_("p",[v._v("条条道路通罗马")])]),v._v(" "),_("h2",{attrs:{id:"什么是策略模式？"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是策略模式？"}},[v._v("#")]),v._v(" 什么是策略模式？")]),v._v(" "),_("p",[v._v("根据输入不同条件，进行不同的计算。")]),v._v(" "),_("p",[v._v("例如输入"),_("code",[v._v("+")]),v._v("进行加法，输入"),_("code",[v._v("-")]),v._v("就进行减法。")]),v._v(" "),_("p",[v._v("然后把这些计算公式封装到同一个函数内部。")]),v._v(" "),_("p",[v._v("这个函数内部根据符号进行判断的方式可以是"),_("code",[v._v("if else")])]),v._v(" "),_("h2",{attrs:{id:"实现策略模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现策略模式"}},[v._v("#")]),v._v(" 实现策略模式")]),v._v(" "),_("p",[v._v("文中举例的例子十分简单。")]),v._v(" "),_("p",[v._v("将要复用的方法放到一个对象内部："),_("code",[v._v("var ways = {}")])]),v._v(" "),_("ol",[_("li",[v._v("实现一个"),_("code",[v._v("add")]),v._v("方法通过参数选择"),_("code",[v._v("ways")]),v._v("里面的方法注册到可以实例化的对象内部。可以使用"),_("code",[v._v("curry")]),v._v("的方式再一次封装策略中的方法。通过"),_("strong",[v._v("延迟执行策略函数")]),v._v("的方式。")])]),v._v(" "),_("p",[v._v("文中"),_("strong",[v._v("表单验证的举例很形象")]),v._v("，可以看一看。")]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("将函数作为参数传递是简化策略函数的一种方式")])])])}),[],!1,null,null,null);t.default=e.exports}}]);
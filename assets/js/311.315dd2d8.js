(window.webpackJsonp=window.webpackJsonp||[]).push([[311],{348:function(e,v,t){"use strict";t.r(v);var _=t(0),a=Object(_.a)({},function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"nodejs-buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-buffer","aria-hidden":"true"}},[e._v("#")]),e._v(" Nodejs - Buffer")]),e._v(" "),t("blockquote",[t("p",[e._v("入门基础级别")])]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#nodejs---buffer"}},[e._v("Nodejs - Buffer")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86---buffer%E5%AD%98%E5%82%A8%E7%BA%A6%E5%AE%9A"}},[e._v("前置知识 - Buffer存储约定")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86---%E7%BC%96%E7%A0%81"}},[e._v("前置知识 - 编码")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E7%BB%86%E8%8A%82"}},[e._v("细节")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#%E9%93%BE%E6%8E%A5"}},[e._v("链接")])])])])]),e._v(" "),t("h2",{attrs:{id:"前置知识-buffer存储约定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识-buffer存储约定","aria-hidden":"true"}},[e._v("#")]),e._v(" 前置知识 - Buffer存储约定")]),e._v(" "),t("p",[t("code",[e._v("Buffer")]),e._v("是一个类数组格式。数组每一个元素都是一个字节，"),t("strong",[e._v("一个字节就是"),t("code",[e._v("8bits")])]),e._v("。也就是"),t("code",[e._v("0000 0000")]),e._v("。")]),e._v(" "),t("p",[e._v("也就是意味着如果"),t("code",[e._v("0000 0000")]),e._v("表示为数字就是"),t("code",[e._v("0-255")]),e._v("。这里要区分一个概念，就是真正的数字和这里的"),t("code",[e._v("0-255")]),e._v("。"),t("strong",[e._v("真正的数字是8个字节，而Buffer数字意味编码表的"),t("code",[e._v("index")]),e._v("。")])]),e._v(" "),t("p",[e._v("如果将数字传递给"),t("code",[e._v("Buffer")])]),e._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("Buffer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 创建10个字节buffer")]),e._v("\nBuffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("alloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 10个字节，并以数字1初始化。1转化为二进制为 0000 0001。代表编码表index")]),e._v("\nBuffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 此时1,2,3同样也是编码表index。所以数字不能够超过255")]),e._v("\n")])])]),t("p",[e._v("可以发现"),t("code",[e._v("Buffer")]),e._v("并没有直接操作数字的操作。如果初始化为字符串。")]),e._v(" "),t("p",[t("code",[e._v("Buffer.alloc(10, 'a')")]),e._v("。其中"),t("code",[e._v("a")]),e._v("编码"),t("code",[e._v("index=97")]),e._v("。")]),e._v(" "),t("p",[e._v("而对于"),t("code",[e._v("Buffer.from('hello')")]),e._v("，会分割每一个字母，然后由于英文字母"),t("code",[e._v("index")]),e._v("不会超过255。所以一个字母对应一个字节。存储也没有问题。")]),e._v(" "),t("h2",{attrs:{id:"前置知识-编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识-编码","aria-hidden":"true"}},[e._v("#")]),e._v(" 前置知识 - 编码")]),e._v(" "),t("blockquote",[t("p",[e._v("在"),t("a",{attrs:{href:"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86---buffer%E5%AD%98%E5%82%A8%E7%BA%A6%E5%AE%9A"}},[e._v("前置知识 - Buffer存储约定")]),e._v("中是"),t("code",[e._v("ascii")]),e._v("的编码表，就像是"),t("code",[e._v("a")]),e._v("编码"),t("code",[e._v("index=97")]),e._v("。")])]),e._v(" "),t("blockquote",[t("p",[e._v("编码就是如何处理字节，字符；只有在涉及字符串的时候才有编码，数字的话就是一个字节value。和编码没有关系")])]),e._v(" "),t("blockquote",[t("p",[e._v("无论编码格式如何，都是一个字节一个字节存储，变的是多个字节才能表示一个原始数据")])]),e._v(" "),t("p",[t("strong",[e._v("简单说明几个编码格式")])]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("utf-8")]),e._v(" - 多字节编码，每个字符的代表的字节是不一定的。中文可能是多个字节，单个英文字母是一个字节(可能会认为一个中文类比一个英文字母吧)。")]),e._v(" "),t("blockquote",[t("p",[e._v("其实这就涉及到了计算机如何判断多少个字节是一个字符的问题？一般我们创建"),t("code",[e._v("buffer")]),e._v("指定了编码格式，那么"),t("code",[e._v("buffer->string")]),e._v("的过程中，就会以编码的方式看待字节。通过一些标志位来判断字节连续性。 例如存在一个"),t("code",[e._v("urf-8")]),e._v("编码表，一个"),t("code",[e._v("index")]),e._v("对应一个字符(可以英文或者中文)，那么多个字节得出的"),t("code",[e._v("index>255")]),e._v("自然也就可以表示超过英文字母的表示了。"),t("strong",[e._v("一般存储以及"),t("code",[e._v("toString")]),e._v("表示需要设定同一个编码格式。")])])]),e._v(" "),t("blockquote",[t("p",[e._v("那么字符串到"),t("code",[e._v("buffer")]),e._v("是如何处理的？"),t("code",[e._v("Buffer.from('hello', 'utf-8')")]),e._v("。"),t("strong",[e._v("utf-8编码表是"),t("code",[e._v("(index, value)")]),e._v("格式，"),t("code",[e._v("index")]),e._v("可以超过255")]),e._v("。对于每个 "),t("strong",[e._v("单个字母")]),e._v(" 通过"),t("code",[e._v("value")]),e._v("找到"),t("code",[e._v("index")]),e._v("，如果"),t("code",[e._v("index<255")]),e._v("，那么表示为一个字节。如果"),t("code",[e._v("index>255")]),e._v("的话就是多个字节(毕竟一个字节无法表示)。"),t("strong",[e._v("utf-8 index需要包含字节序控制")])])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("hex")]),e._v(" - 单字节编码，一个字节8bit，可以表示为两个16进制数字。例如"),t("code",[e._v("1")]),e._v("可以是"),t("code",[e._v("0001")]),e._v("，此时不足一个字节，一个字节的话就是"),t("code",[e._v("0000 0001")]),e._v("。")]),e._v(" "),t("blockquote",[t("p",[e._v("也就是说，"),t("code",[e._v("hex")]),e._v("遇到单个字符会通过"),t("code",[e._v("index, value")]),e._v("方式，将找到的"),t("code",[e._v("index")]),e._v("变为4bit。可是没有半个字节存储的数据。所以"),t("code",[e._v("hex")]),e._v("会读两个字符 "),t("strong",[e._v("拼接为"),t("code",[e._v("8bit")])]),e._v("。")])]),e._v(" "),t("p",[e._v("就像是"),t("code",[e._v("Buffer.from('74')")]),e._v("。显示遇到"),t("code",[e._v("7->0111")]),e._v("("),t("code",[e._v("index")]),e._v("也是"),t("code",[e._v("7")]),e._v(")，"),t("code",[e._v("4->0100")]),e._v("。那么"),t("code",[e._v("buffer")]),e._v("存储结果就是"),t("code",[e._v("0111 0100")]),e._v("。假设我们通过"),t("code",[e._v("ascii")]),e._v("来"),t("code",[e._v("toString")]),e._v("，显然会一个个字节读取，而不是"),t("code",[e._v("hex")]),e._v("半个字节读取。"),t("strong",[e._v("一定会出错的！")])])])]),e._v(" "),t("p",[e._v("除了通过编码控制读取字节，还可以通过接口还是来控制一次性读取几个字节。")]),e._v(" "),t("h2",{attrs:{id:"细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#细节","aria-hidden":"true"}},[e._v("#")]),e._v(" 细节")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Array.from()")]),e._v(" - 如果传递"),t("code",[e._v("buffer")]),e._v("是复制不共享，如果是"),t("code",[e._v("arraybuffer(!=array)")]),e._v("是共享的。")])]),e._v(" "),t("h2",{attrs:{id:"链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链接","aria-hidden":"true"}},[e._v("#")]),e._v(" 链接")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("编码链接"),t("OutboundLink")],1)])])])},[],!1,null,null,null);v.default=a.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[350],{312:function(v,_,t){"use strict";t.r(_);var e=t(0),o=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"vue-diff"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-diff"}},[v._v("#")]),v._v(" Vue - diff")]),v._v(" "),t("blockquote",[t("p",[v._v("虚拟DOM")])]),v._v(" "),t("h2",{attrs:{id:"前置知识-虚拟dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识-虚拟dom"}},[v._v("#")]),v._v(" 前置知识 - 虚拟DOM")]),v._v(" "),t("p",[v._v("将真实DOM结构转换为JS数据结构。类似"),t("code",[v._v('<div class="xx" some-attr>other tag</div>')]),v._v("，可以转变为：")]),v._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 只是举例，真实key可能不是这样")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// VNode结构")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'div'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n  attr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("...")]),v._v("\n  children"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("Vnode1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" VNode2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])]),t("p",[v._v("假设是根节点(就像是"),t("code",[v._v("vue")]),v._v("文件中的"),t("code",[v._v("template")]),v._v(")，那么整个"),t("code",[v._v("vue")]),v._v("文件的根节点"),t("code",[v._v("dom")]),v._v("结构如上。")]),v._v(" "),t("p",[t("strong",[v._v("注意：")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("在"),t("code",[v._v("VNode")]),v._v("中，同时还会绑定真实的"),t("code",[v._v("DOM")]),v._v("结构，便于在"),t("code",[v._v("Diff")]),v._v("算法中进行"),t("code",[v._v("DOM")]),v._v("操作。")]),v._v(" "),t("div",{staticClass:"language-JavaScript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'div'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n  el"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" div "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 真实dom节点")]),v._v("\n  attr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n  children"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("Vnode1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" VNode2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])])])]),v._v(" "),t("h2",{attrs:{id:"diff-一些规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diff-一些规则"}},[v._v("#")]),v._v(" Diff - 一些规则")]),v._v(" "),t("blockquote",[t("p",[v._v("分为简单复杂两个步骤,比较的新旧VNODE")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("比较新旧元素"),t("code",[v._v("tag")]),v._v("(在"),t("code",[v._v("vue")]),v._v("中可能会比较"),t("code",[v._v("key")]),v._v("，如果是组件的话就比较组件)")]),v._v(" "),t("ul",[t("li",[v._v("如果相等，才会继续比较。这里有一个"),t("a",{attrs:{href:""}},[v._v("Q&A3疑惑-如果新旧元素只是父类元素不同，而子类元素完全一样会进行如何的DIFF")]),v._v(" - 此时会称为 "),t("strong",[v._v("值得比较")])]),v._v(" "),t("li",[v._v("如果不相等，就会 "),t("strong",[v._v("直接进行添加删除操作")]),v._v(" - 此时会称为 "),t("strong",[v._v("不值得比较")])])])]),v._v(" "),t("li",[t("p",[v._v("(对于第1点相等的新旧元素值得比较情况下)可能出现 "),t("strong",[v._v("旧元素存在子节点or新元素存在子节点")]),v._v("此类二者存一的情况。此时也是 "),t("strong",[v._v("直接进行删除添加操作")])])]),v._v(" "),t("li",[t("p",[v._v("(以上都是比较操作比较直接的比较，以及DOM操作) - 如果 "),t("strong",[v._v("值得比较&新旧元素子节点都存在")]),v._v("，那么就应该进行进一步比较，这是"),t("code",[v._v("diff")]),v._v("算法重点内容。")])]),v._v(" "),t("li",[t("p",[v._v("(减低算法复杂度)只会比较树状结构同一层节点，就像是"),t("a",{attrs:{href:""}},[v._v("前置知识 - 虚拟DOM")]),v._v("中举例的"),t("code",[v._v("VNODE")]),v._v("结构，比较新旧"),t("code",[v._v("VNODE")]),v._v("的"),t("code",[v._v("children")]),v._v("。")]),v._v(" "),t("blockquote",[t("p",[v._v("其实"),t("a",{attrs:{href:""}},[v._v("前置知识 - 虚拟DOM")]),v._v("JSON格式也是类似树的树结构。"),t("code",[v._v("children")]),v._v("就是父类"),t("code",[v._v("div")]),v._v("的同一层的子节点。")])]),v._v(" "),t("blockquote",[t("p",[v._v("所以可以设想以下，拿到新旧VNODE，根节点对应第一层元素，互相的"),t("code",[v._v("children")]),v._v("对应第2层元素。如果元素"),t("code",[v._v("tag")]),v._v("就不一样了，那么就是删除操作了。如果值得比较了，那么比较"),t("code",[v._v("children")]),v._v("(经过第2点筛选)，比较"),t("code",[v._v("children")]),v._v("中"),t("code",[v._v("vnode")]),v._v("原则是不变的。")])])])]),v._v(" "),t("h2",{attrs:{id:"diff"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[v._v("#")]),v._v(" Diff")]),v._v(" "),t("blockquote",[t("p",[v._v("对于单个节点，只有规则1适用。"),t("code",[v._v("diff")]),v._v("比较的是单个节点的"),t("code",[v._v("children")]),v._v("部分，或者是list部分。由于是一个递归过程，会比较"),t("code",[v._v("children's vnode")]),v._v("中"),t("code",[v._v("vnode")]),v._v("。")])]),v._v(" "),t("blockquote",[t("p",[t("strong",[v._v("其实可以参考检测回文的的步骤")]),v._v("。会在新旧vnode头尾都放置两个指针"),t("a",{attrs:{href:""}},[v._v("果然和我总结的算法指北一样")]),v._v("，然后移动两个指针就可以了。")])]),v._v(" "),t("p",[v._v("假设"),t("code",[v._v("oldnode: oldstart oldend")]),v._v("，以及"),t("code",[v._v("newnode: newstart newend")]),v._v("。存在四种比较情况(也是比较顺序)，中止比较的条件为 "),t("strong",[v._v("指针达到尾部，如果存在oldstart到达尾部，newstart没有达到(参考"),t("code",[v._v("mergetsort")]),v._v("对这一部分处理)")]),v._v("：")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("oldstart&newstart")]),v._v(" - 比较规则还是"),t("a",{attrs:{href:""}},[v._v("Diff - 一些规则")]),v._v("，如果值得比较就进行递归"),t("code",[v._v("diff")]),v._v("->然后下移"),t("code",[v._v("oldstart&newstart")]),v._v("指针->回到第一步")]),v._v(" "),t("li",[t("code",[v._v("oldend&newend")]),v._v(" - 比较规则还是"),t("a",{attrs:{href:""}},[v._v("Diff - 一些规则")]),v._v("，如果值得比较就进行递归"),t("code",[v._v("diff")]),v._v("->然后下移"),t("code",[v._v("oldend(--)&newend(--)")]),v._v("指针->回到第一步")]),v._v(" "),t("li",[t("code",[v._v("oldstart&newend")]),v._v(" - 比较规则还是"),t("a",{attrs:{href:""}},[v._v("Diff - 一些规则")]),v._v("，如果值得比较就进行递归"),t("code",[v._v("diff")]),v._v("->将"),t("code",[v._v("oldstart")]),v._v("移动到"),t("code",[v._v("oldvnode")]),v._v("末尾->然后下移"),t("code",[v._v("oldstart(++)&newend(--)")]),v._v("指针->回到第一步")]),v._v(" "),t("li",[t("code",[v._v("oldend&newstart")]),v._v(" - 比较规则还是"),t("a",{attrs:{href:""}},[v._v("Diff - 一些规则")]),v._v("，如果值得比较就进行递归"),t("code",[v._v("diff")]),v._v("->将"),t("code",[v._v("oldend")]),v._v("移动到"),t("code",[v._v("oldvnode")]),v._v("头部->然后下移"),t("code",[v._v("oldend(--)&newend(++)")]),v._v("指针->回到第一步")])]),v._v(" "),t("p",[v._v("以上都是在上一步不成立的情况下，说的太乱的话，见"),t("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[v._v("diff算法分析"),t("OutboundLink")],1)]),v._v(" "),t("h2",{attrs:{id:"q-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[v._v("#")]),v._v(" Q&A")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("Q&A1 -")]),v._v(" 普遍认为虚拟DOM操作时优于直接进行真实DOM操作，原因在于？")])]),v._v(" "),t("p",[v._v("需要接受一个观点，"),t("a",{attrs:{href:""}},[v._v("渲染引擎(内核)和JS引擎")]),v._v("其实是两个部分。在JS上操作数据，一定是比在DOM操作来的快。这是由于引擎不同，JS传递到渲染引擎可能需要经过一个桥(DOM暴露给JS引擎的API)，这部分有耗时。")]),v._v(" "),t("p",[v._v("所以加快操作有两个方法：")]),v._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://github.com/JiangWeixian/JS-Tips/blob/master/docs/HTML/HTML-DOM%E4%BC%98%E5%8C%96%E6%8C%87%E5%8D%97.md",target:"_blank",rel:"noopener noreferrer"}},[v._v("批量操作"),t("OutboundLink")],1),v._v("，一次性过桥比一次接着一次过桥来的快")])]),v._v(" "),t("blockquote",[t("p",[v._v("不使用DOM-API，而是像VNODE一样直接在JS上操作。")])]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[v._v("Q&A2 -")]),v._v(" 虚拟DOM什么时候生成？")])]),v._v(" "),t("p",[v._v("初始化编译阶段(从"),t("code",[v._v("vue->html")]),v._v(")一定会生成一份"),t("code",[v._v("vnode")]),v._v("。问题在于新的"),t("code",[v._v("vnode")]),v._v("什么时候生成？")]),v._v(" "),t("ul",[t("li",[v._v("数据变动 - 生成新的"),t("code",[v._v("vnode")]),v._v("，这部分可能是"),t("code",[v._v("v-for")]),v._v("，或者是"),t("code",[v._v("if else")]),v._v("来触发哪些"),t("code",[v._v("DOM")]),v._v("是出现或者消失，"),t("strong",[v._v("而这些都和data有关")]),v._v("，那么这部分数据变动会触发"),t("code",[v._v("new vnode")]),v._v("可以理解。")]),v._v(" "),t("li",[v._v("如果对真实dom直接进行拖拽等操作，这就不是"),t("code",[v._v("vue")]),v._v("数据驱动的路子了，估计会再进行经过编译的步骤？(个人理解) - 如果拖拽换为"),t("code",[v._v("vue")]),v._v("的路子，应该是拖拽引起数据变化，然后然后数据变化引起"),t("code",[v._v("dom")]),v._v("更新，动画效果应该也能够通过一定方法实现。")])]),v._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[v._v("Q&A3 -")]),v._v(" 虚拟DOM什么时候起作用？")])]),v._v(" "),t("p",[v._v("在"),t("code",[v._v("vue->html")]),v._v("过程中生成一份"),t("code",[v._v("old vnode")]),v._v("。可能引起"),t("code",[v._v("DOM")]),v._v("变化的有：")]),v._v(" "),t("ul",[t("li",[v._v("如果是数据更新(因为有些元素结合和"),t("code",[v._v("data")]),v._v("一些数据绑定)")]),v._v(" "),t("li",[t("code",[v._v("vue")]),v._v("中"),t("code",[v._v("html")]),v._v("变化")])]),v._v(" "),t("p",[v._v("在"),t("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[v._v("diff算法分析"),t("OutboundLink")],1),v._v("参考中，上面两个都会触发"),t("code",[v._v("diff")]),v._v("算法，只不过"),t("code",[v._v("diff")]),v._v("程度不同。")]),v._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[v._v("Q&A4 -")]),v._v(" 如果新旧元素只是父类元素不同，而子类元素完全一样会进行如何的DIFF")])]),v._v(" "),t("p",[v._v("对于这部分处理时减少算法复杂度关键，直接进行删除操作的复杂度一定是比递归进行"),t("code",[v._v("diff")]),v._v("比较难度低。")]),v._v(" "),t("p",[t("code",[v._v("diff")]),v._v("算法的目的是为了减少多次频繁大规模的"),t("code",[v._v("dom")]),v._v("操作(在元素值得比较的是时候发挥作用)，但是显然这一次不需要"),t("code",[v._v("diff")]),v._v("进行避免。")]),v._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[v._v("Q&A5 -")]),t("code",[v._v("diff")]),v._v("算法以及"),t("code",[v._v("vnode")]),v._v("意义")])]),v._v(" "),t("p",[v._v("在上面 "),t("strong",[v._v("Q&A")]),v._v("中提到了触发生成"),t("code",[v._v("new vnode")]),v._v("方式，数据变动触发生成"),t("code",[v._v("new vnode")]),v._v("。"),t("code",[v._v("old vnode")]),v._v("以及"),t("code",[v._v("new vnode")]),v._v("进行"),t("code",[v._v("diff")]),v._v("算法比较，之后才会进行到真实"),t("code",[v._v("dom")]),v._v("节点的数据更新。"),t("strong",[v._v("所以vnode->dom这一步被"),t("code",[v._v("diff")]),v._v("算法劫持了")])]),v._v(" "),t("h2",{attrs:{id:"链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[v._v("#")]),v._v(" 链接")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/aooy/blog/issues/2",target:"_blank",rel:"noopener noreferrer"}},[v._v("diff算法分析"),t("OutboundLink")],1),v._v(" / 或许是主要参考文章")])])])}),[],!1,null,null,null);_.default=o.exports}}]);
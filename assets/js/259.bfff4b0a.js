(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{536:function(e,o,v){"use strict";v.r(o);var t=v(0),_=Object(t.a)({},(function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"node-cron"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node-cron"}},[e._v("#")]),e._v(" node-cron")]),e._v(" "),v("blockquote",[v("p",[e._v("cron就是此类定时任务的统称")])]),e._v(" "),v("p",[e._v("突然对"),v("code",[e._v("todo")]),e._v("这类应用的定时任务如何执行有了一点疑惑。如果从前端的思维出发，第一时间想到的就是"),v("code",[e._v("setInterval")]),e._v("这种方法。")]),e._v(" "),v("p",[e._v("但是对于网页来说，关闭网页就以为着任务的结束。必然是需要额外的数据存储或者是"),v("code",[e._v("server")]),e._v("支持。暂且撇开这个不讨论。")]),e._v(" "),v("p",[v("code",[e._v("cron task")]),e._v("有没有什么好的办法执行的？"),v("a",{attrs:{href:"https://github.com/kelektiv/node-cron",target:"_blank",rel:"noopener noreferrer"}},[e._v("node-cron"),v("OutboundLink")],1),e._v(" 这个库解决了大部分问题。那么基于这个库看看能不能解决我的疑惑？（在额外的数据存储或者是"),v("code",[e._v("server")]),e._v("支持下，参考现在"),v("code",[e._v("todo app")]),e._v("实现。在"),v("code",[e._v("kill app")]),e._v("仍旧是可以进行"),v("code",[e._v("push")]),e._v("的）")]),e._v(" "),v("ul",[v("li",[e._v("Q1 - 如何解决定点执行的任务。（大多数"),v("code",[e._v("app")]),e._v("主题功能）")]),e._v(" "),v("li",[e._v("A1 - 这个好解决。因为即使服务器挂了。下一次时间到来的时候。仍旧是可以进行触发提醒的。")]),e._v(" "),v("li",[e._v("Q2 - 周期提醒的任务，比如说是重复的（每天。每周）")]),e._v(" "),v("li",[e._v("A2 - 在服务器不挂的情况下，自然正确执行。因为重复任务一定和某个具体时间点挂钩，那么及时"),v("code",[e._v("cron job server failed")]),e._v("。那么重启之后依旧可以在某个时间点正确的重复执行。")])])])}),[],!1,null,null,null);o.default=_.exports}}]);
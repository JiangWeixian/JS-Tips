(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{579:function(a,t,e){"use strict";e.r(t);var v=e(0),r=Object(v.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"js-基本类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-基本类型","aria-hidden":"true"}},[a._v("#")]),a._v(" JS - 基本类型")]),a._v(" "),e("blockquote",[e("p",[a._v("细节细节；这里我说明是值类型")])]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#js---%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B"}},[a._v("JS - 基本类型")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%80%BC%E7%B1%BB%E5%9E%8B"}},[a._v("什么是值类型？")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E6%98%AF%E5%90%A6%E6%98%AF%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[a._v("是否是构造函数")])]),a._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%8E%E5%86%85%E5%AD%98%E8%81%94%E7%B3%BB"}},[a._v("与内存联系")])])])])]),a._v(" "),e("h2",{attrs:{id:"什么是值类型？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是值类型？","aria-hidden":"true"}},[a._v("#")]),a._v(" 什么是值类型？")]),a._v(" "),e("p",[e("code",[a._v("string number boolean")]),a._v("这些都是值类型的数据。")]),a._v(" "),e("h2",{attrs:{id:"是否是构造函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否是构造函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 是否是构造函数")]),a._v(" "),e("p",[a._v("创建数据可以通过三种方式：")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("字面量类型 - "),e("code",[a._v("var a = 1")])])]),a._v(" "),e("li",[e("p",[a._v("构造函数 - "),e("code",[a._v("var newa = new Number(1)")])]),a._v(" "),e("blockquote",[e("p",[a._v("返回的数据是"),e("code",[a._v("typeof newa")]),a._v("为"),e("code",[a._v("object")]),a._v("，和第1点数据类型实不同。在"),e("code",[a._v("==")]),a._v("情况下，"),e("code",[a._v("a == newa // true")]),a._v("。这是由于"),e("code",[a._v("==")]),a._v("需要进行类型转化，转换规则见"),e("a",{attrs:{href:""}},[a._v("JS高程-转换规则")]),a._v("；而在"),e("code",[a._v("===")]),a._v("不能够进行类型转换，由于类型直接就是不同的，所以"),e("code",[a._v("a === newa // false")]),a._v("。")])])]),a._v(" "),e("li",[e("p",[a._v("非构造函数 - "),e("code",[a._v("var numa = Number(1)")]),a._v("。这个可以理解为类型转换。")]),a._v(" "),e("blockquote",[e("p",[a._v("所以对于输入其中的数据需要进行类型转换，"),e("strong",[a._v("并返回转换好的数据。")]),a._v(" 在"),e("code",[a._v("== or ===")]),a._v("情况下，"),e("code",[a._v("a and numa")]),a._v("结果都是"),e("code",[a._v("true")])])])])]),a._v(" "),e("h2",{attrs:{id:"与内存联系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与内存联系","aria-hidden":"true"}},[a._v("#")]),a._v(" 与内存联系")]),a._v(" "),e("blockquote",[e("p",[a._v("在"),e("a",{attrs:{href:"#%E6%98%AF%E5%90%A6%E6%98%AF%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[a._v("是否是构造函数")]),a._v("中使用的构造方式都是在分配新内存")])]),a._v(" "),e("p",[a._v("同样以下方式也是分配新内存：")]),a._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 在值类型复制过程中，是分配新内存的")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a\n")])])]),e("p",[e("strong",[a._v("值类型总是在分配新内存")])])])},[],!1,null,null,null);t.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{484:function(t,a,e){"use strict";e.r(a);var s=e(0),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"高阶redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶redux"}},[t._v("#")]),t._v(" 高阶Redux")]),t._v(" "),e("h2",{attrs:{id:"高阶含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶含义"}},[t._v("#")]),t._v(" 高阶含义")]),t._v(" "),e("p",[t._v("等同于高阶组件的高阶 = 高阶组件是在创造一种特定类型的组件类型。")]),t._v(" "),e("p",[t._v("那么高阶Redux其实就是在创造或者控制一种特定类型的"),e("code",[t._v("Redux")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"redux和表单以及列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux和表单以及列表"}},[t._v("#")]),t._v(" Redux和表单以及列表")]),t._v(" "),e("p",[t._v("Redux与这两个结合主要是这两个冗余代码比较多。节约代码的方式分别是")]),t._v(" "),e("ol",[e("li",[t._v("redux")]),t._v(" "),e("li",[t._v("hoc")])]),t._v(" "),e("p",[t._v("文中只是举例了redux的方式")]),t._v(" "),e("h3",{attrs:{id:"redux与表单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redux与表单"}},[t._v("#")]),t._v(" Redux与表单")]),t._v(" "),e("p",[t._v("表单是比较特殊的类型。因为会涉及到交互操作，因为频繁的改变数据，要把改变的数据传递出来。")]),t._v(" "),e("p",[t._v("推荐redux是因为可以把重复的代码提取出来。")]),t._v(" "),e("h3",{attrs:{id:"列表最佳实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列表最佳实践"}},[t._v("#")]),t._v(" 列表最佳实践")]),t._v(" "),e("p",[t._v("对表格来说也是这样的。")]),t._v(" "),e("ol",[e("li",[t._v("最好支持的四个操作 - CRUD")])]),t._v(" "),e("blockquote",[e("p",[t._v("增删改查，如果结合了redux。那么这四个操作就可以独立到redux里面去了。")])]),t._v(" "),e("h2",{attrs:{id:"性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" "),e("strong",[t._v("性能优化")])]),t._v(" "),e("p",[t._v("个人认为是比较重要的一部分。")]),t._v(" "),e("p",[e("strong",[t._v("reselect")]),t._v(" 避免重复计算")]),t._v(" "),e("p",[t._v("含义等价于"),e("code",[t._v("vuex-getter")])]),t._v(" "),e("p",[t._v("store里面的数据是存储了一份，但是如果存储的数据其中一部分变化了。另外一部分没有变化。")]),t._v(" "),e("p",[t._v("同时，我们需要对store里面的原始数据进行"),e("code",[t._v("transform")]),t._v("。")]),t._v(" "),e("p",[t._v("但是如果知识一部分更新，另外一部分没有更新。我们"),e("code",[t._v("transform")]),t._v("恰好有事这部分没有更新的数据。可能会导致重新的"),e("code",[t._v("transform")]),t._v("。")]),t._v(" "),e("p",[t._v("这也是优化点。如果传递的数据不变，就不需要重新计算。")]),t._v(" "),e("p",[e("strong",[t._v("同时原始的redux也是没有这个接口的，需要使用第三方框架。")])]),t._v(" "),e("p",[e("strong",[t._v("Immutable")])]),t._v(" "),e("p",[t._v("如果我们"),e("code",[t._v("...")]),t._v("解构的进行"),e("code",[t._v("redux")]),t._v("操作的话。其实也就是一种"),e("code",[t._v("Immutable")]),t._v("的数据操作。")]),t._v(" "),e("blockquote",[e("p",[t._v("虽然我还不知道为什么推荐这种"),e("code",[t._v("Immutable")]),t._v("方式。但是我想和批量操作有关。因为如果一个个去修改数据。可能会触发多次更新，"),e("code",[t._v("...")]),t._v("是目前比较优雅的方式。")])]),t._v(" "),e("p",[e("strong",[t._v("Batch actions")])]),t._v(" "),e("p",[t._v("批量触发actions的优化。的确是有这样的需求。")]),t._v(" "),e("p",[t._v("之所以能够发生这样的优化,应该就是因为"),e("code",[t._v("batch actions")]),t._v("不同于多个"),e("code",[t._v("action")]),t._v("同时触发.")]),t._v(" "),e("ol",[e("li",[t._v("多个"),e("code",[t._v("action")]),t._v("同时触发, 会多次修改"),e("code",[t._v("reduce")]),t._v(", 每一次都会同步到"),e("code",[t._v("state")])]),t._v(" "),e("li",[t._v("如果"),e("code",[t._v("batch action")]),t._v(", 多次修改之后, 再一同同步到"),e("code",[t._v("state")])])]),t._v(" "),e("p",[e("strong",[t._v("原理!")]),t._v("(其实很简单, 观察"),e("a",{attrs:{href:"https://github.com/tshelburne/redux-batched-actions/blob/master/src/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("redux-batched-actions"),e("OutboundLink")],1),t._v(")")]),t._v(" "),e("p",[t._v("观察"),e("code",[t._v("batch-redux")]),t._v("原理.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BATCH")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BATCHING_REDUCER.BATCH'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("batchActions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("actions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BATCH")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" meta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" batch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableBatching")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reduce")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("batchingReducer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("batchingReducer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[e("p",[t._v("batchactions - 是用来触发"),e("code",[t._v("actions")]),t._v(", 参数就是"),e("code",[t._v("actions")]),t._v("数组")])]),t._v(" "),e("li",[e("p",[t._v("enablebatching - 很重要, 也很简单")]),t._v(" "),e("blockquote",[e("p",[t._v("一般来说"),e("code",[t._v("reducer")]),t._v("是"),e("code",[t._v("enablebatching")]),t._v("内部的那个函数. 接受"),e("code",[t._v("state action")])])]),t._v(" "),e("p",[t._v("但是这里有一个"),e("code",[t._v("reduce")]),t._v("函数进行包裹 目的是为了什么?")]),t._v(" "),e("p",[t._v("也就是说传统的"),e("code",[t._v("reducer")]),t._v("都需要通过"),e("code",[t._v("enablebatching")]),t._v("的函数进行包裹, "),e("strong",[t._v("这很关键.")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("那么, 在不满足"),e("code",[t._v("if")]),t._v("条件的时候, 这其实就是一个普通的"),e("code",[t._v("reducer")]),t._v("函数")])])]),t._v(" "),e("blockquote",[e("p",[t._v("如果是"),e("code",[t._v("batch actions")]),t._v("触发的, 那么就是执行的是"),e("code",[t._v("if")]),t._v("里面的语句. 那么根据"),e("code",[t._v("array.reduce")]),t._v("函数的特点, 会在数组执行完毕之后, 统一返回执行的结果. 那么就不会发生 "),e("strong",[t._v("传递一次action, 更新一次state")]),t._v(" 而是多次"),e("code",[t._v("action")]),t._v(" 才会更新一次"),e("code",[t._v("state")]),t._v(".")])]),t._v(" "),e("p",[e("strong",[t._v("记住"),e("code",[t._v("enablebatching")]),t._v("传递的是"),e("code",[t._v("reduce")])]),t._v(", 是高阶"),e("code",[t._v("reducer")]),t._v("的一种, 对"),e("code",[t._v("reduce")]),t._v("进行提高.")])])]),t._v(" "),e("h2",{attrs:{id:"解读redux以及react-redux"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解读redux以及react-redux"}},[t._v("#")]),t._v(" 解读"),e("code",[t._v("redux")]),t._v("以及"),e("code",[t._v("react-redux")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("initstate")]),t._v("以及"),e("code",[t._v("reducer")])])]),t._v(" "),e("p",[e("code",[t._v("initstate")]),t._v("决定了"),e("code",[t._v("state")]),t._v("拥有怎样的数据, "),e("code",[t._v("reducer")]),t._v("通过"),e("code",[t._v("action")]),t._v("来更新数据(是一个数据更新的集合), "),e("code",[t._v("store")]),t._v("的名字是通过"),e("code",[t._v("reducer")]),t._v("决定的.")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("reducer")]),t._v("决定"),e("code",[t._v("store")]),t._v("拥有怎样的数据这种说法是不对的. 而是"),e("code",[t._v("reducer")]),t._v("返回的结果决定了"),e("code",[t._v("store")]),t._v("拥有怎样的数据才对")])]),t._v(" "),e("p",[e("code",[t._v("createstore")]),t._v("通过标题两者构造"),e("code",[t._v("store")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("数据监听")])]),t._v(" "),e("p",[t._v("其实是"),e("code",[t._v("redux-subscribe")]),t._v("的作用, 而"),e("code",[t._v("connect")]),t._v("就是帮我们做了这件事情.")]),t._v(" "),e("p",[t._v("同时如果"),e("code",[t._v("state")]),t._v("不传递"),e("code",[t._v("mapstate2props")]),t._v("的话, 其实组件是不会"),e("code",[t._v("subsribe store")]),t._v("的数据的.")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("dispatch")])]),t._v(" "),e("p",[t._v("为了避免陷入死循环. 其实在"),e("code",[t._v("dispatch action")]),t._v("的时候, 会进行判断当前是不是进行一次"),e("code",[t._v("dispatch action")]),t._v("(明显的单线程判断)")]),t._v(" "),e("p",[t._v("此时在这个阶段就会发生"),e("code",[t._v("store")]),t._v("根据"),e("code",[t._v("action")]),t._v("来更新数据.")]),t._v(" "),e("p",[t._v("更新完成之后, 在"),e("code",[t._v("connect")]),t._v("阶段组件作为默认的订阅者就会触发更新.")])])}),[],!1,null,null,null);a.default=v.exports}}]);
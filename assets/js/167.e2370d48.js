(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{496:function(e,_,v){"use strict";v.r(_);var s=v(0),t=Object(s.a)({},(function(){var e=this,_=e.$createElement,v=e._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"css-命名规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#css-命名规范"}},[e._v("#")]),e._v(" CSS - 命名规范")]),e._v(" "),v("blockquote",[v("p",[e._v("需要找到适合自己的")])]),e._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#refs"}},[e._v("Refs")])])])]),v("p"),e._v(" "),v("ol",[v("li",[v("p",[e._v("首先，参考中的命名规范是可以的也是值得借鉴的。")]),e._v(" "),v("p",[e._v("至少告诉我们通用的"),v("code",[e._v("classname")]),e._v("应该命名为什么。")]),e._v(" "),v("p",[e._v("以及那些"),v("code",[e._v("classname")]),e._v("一定是没有含义的。例如"),v("code",[e._v("wrap")]),e._v("。"),v("code",[e._v("wrap")]),e._v("之后的"),v("code",[e._v("classname")]),e._v("才可以被命名为组件名。")])]),e._v(" "),v("li",[v("p",[e._v("和"),v("code",[e._v("BEM")]),e._v("是不冲突的，我们需要解决的是如何更好的利用"),v("code",[e._v("BEM")]),e._v("。")]),e._v(" "),v("p",[e._v("关键在于语义化。也就是任何命名是需要有意义的。")]),e._v(" "),v("p",[v("strong",[e._v("但是问题就在于！")])]),e._v(" "),v("p",[e._v("有的时候"),v("code",[e._v("classname")]),e._v("是需要复用的。以"),v("code",[e._v("stylus")]),e._v("为例子，可以是通过"),v("code",[e._v("mixin")]),e._v("或者"),v("code",[e._v("extend")]),e._v("两种方式进行复用。前者有点像是在"),v("code",[e._v("classname")]),e._v("内部使用函数，后者则是继承某个"),v("code",[e._v("classname")]),e._v("。")]),e._v(" "),v("p",[e._v("往往期望"),v("code",[e._v("extend classname")]),e._v("是不具有业务属性的，也就是不会被命名类似为"),v("code",[e._v("original_post etc")]),e._v("。而是应该为"),v("code",[e._v("table_overhidden")]),e._v("。")]),e._v(" "),v("p",[e._v("所以可以做一点约束。也就是：")]),e._v(" "),v("p",[v("strong",[e._v("如果是需要被复用的，就写作是"),v("code",[e._v("mixin")]),e._v("。而任何"),v("code",[e._v("classname")]),e._v("都应该是业务的。")]),e._v(" 这部分可以结合"),v("router-link",{attrs:{to:"/CSS/stylus-继承父类className.html"}},[e._v("stylus-如何继承classname")])],1)]),e._v(" "),v("li",[v("p",[e._v("命名需要短")]),e._v(" "),v("p",[e._v("但是有的时候很很烦的是。模块化是没有办法绕过去。（意味着我们可能是会有很长的"),v("code",[e._v("classname")]),e._v("前缀。）但是这一点也是有必要的。")]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("但是")]),e._v(" 更加期望的是在"),v("code",[e._v("post.tsx")]),e._v("文件下的组件。其使用的"),v("code",[e._v("classname")]),e._v("自动被加上"),v("code",[e._v("post")]),e._v("（也就是文件名前缀）。指的是你不需要在"),v("code",[e._v(".styl")]),e._v("文件中这样 "),v("strong",[e._v("手动")]),e._v(" 加上前缀命名。同时也不需要"),v("code",[e._v(".tsx")]),e._v("文件中使用很长的前缀的"),v("code",[e._v("classname")]),e._v("。这一点"),v("code",[e._v("umi")]),e._v("做到了。")])]),e._v(" "),v("p",[e._v("或者可以参考"),v("a",{attrs:{href:"https://css-tricks.com/css-modules-part-3-react/",target:"_blank",rel:"noopener noreferrer"}},[e._v("css-modules-add-filename-prefix"),v("OutboundLink")],1),e._v("为模块自动加上"),v("code",[e._v(".css|.styl")]),e._v("文件名的前缀。")]),e._v(" "),v("p",[e._v("这样你就可以省去在"),v("code",[e._v(".css|.styl")]),e._v("和"),v("code",[e._v(".tsx")]),e._v("文件中自己加上前缀的工作了。")])])]),e._v(" "),v("h2",{attrs:{id:"refs"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[e._v("#")]),e._v(" Refs")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://guide.aotu.io/docs/name/classname.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("命名规范参考1"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("a",{attrs:{href:"https://jiandanxinli.github.io/2016-08-11.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("命名规范参考2"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=t.exports}}]);
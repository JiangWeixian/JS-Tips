(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{584:function(t,v,_){"use strict";_.r(v);var a=_(0),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"js-内存机制和垃圾回收"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js-内存机制和垃圾回收"}},[t._v("#")]),t._v(" JS - 内存机制和垃圾回收")]),t._v(" "),_("blockquote",[_("p",[t._v("先简单写一下，以后看了《JS高级程序设计》之后补充")])]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#js---%E5%86%85%E5%AD%98%E6%9C%BA%E5%88%B6%E5%92%8C%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6"}},[t._v("JS - 内存机制和垃圾回收")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#%E5%86%85%E5%AD%98%E6%9C%BA%E5%88%B6"}},[t._v("内存机制")])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6---gc"}},[t._v("垃圾回收 - GC")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F"}},[t._v("内存泄漏")])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E9%87%8A%E6%94%BE%E5%86%85%E5%AD%98"}},[t._v("释放内存")])])])]),t._v(" "),_("li",[_("a",{attrs:{href:"#%E9%93%BE%E6%8E%A5"}},[t._v("链接")])])])])]),t._v(" "),_("h2",{attrs:{id:"内存机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存机制"}},[t._v("#")]),t._v(" 内存机制")]),t._v(" "),_("ul",[_("li",[t._v("变量初始化的时候分配内存\n"),_("ul",[_("li",[t._v("其中简单初始化一个函数不算，如"),_("code",[t._v("function a")]),t._v("(这一点我存有疑惑)")])])]),t._v(" "),_("li",[t._v("匿名函数也算")])]),t._v(" "),_("h2",{attrs:{id:"垃圾回收-gc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收-gc"}},[t._v("#")]),t._v(" 垃圾回收 - GC")]),t._v(" "),_("p",[t._v("原来这家伙叫垃圾回收。"),_("strong",[t._v("周期性的找到那些不再使用变量，关键在于如何找到这些变量")])]),t._v(" "),_("p",[t._v("首先我们分析函数域(形成的局部)")]),t._v(" "),_("ul",[_("li",[t._v("对于函数"),_("code",[t._v("function a")]),t._v(" - 在执行时候分配内存(以下文章提到的)")]),t._v(" "),_("li",[t._v("由于变量只在函数内部起作用，函数调用结束之后，"),_("strong",[t._v("函数内存连带着它里面的变量一起被GC")])])]),t._v(" "),_("p",[t._v("以上特殊情况是：")]),t._v(" "),_("ol",[_("li",[t._v("如果函数内部有返回值，那么就不会被释放(所以递归是比较消耗内存的)")]),t._v(" "),_("li",[t._v("没有返回值，调用结束之后被释放")])]),t._v(" "),_("p",[t._v("以上结论可以细化为变量("),_("strong",[t._v("标记清除")]),t._v("问题)，如果变量是 **有数值的，那么标记为使用的。**就像是上面的函数使用的时候分配内存。于是就有了下面 "),_("strong",[t._v("内存释放")]),t._v("的方式。")]),t._v(" "),_("h3",{attrs:{id:"内存泄漏"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[t._v("#")]),t._v(" 内存泄漏")]),t._v(" "),_("p",[t._v("如果存在循环引用的话，"),_("strong",[t._v("导致了变量一直是被使用的状态")])]),t._v(" "),_("h3",{attrs:{id:"释放内存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#释放内存"}},[t._v("#")]),t._v(" 释放内存")]),t._v(" "),_("p",[t._v("将不用的变量设置为"),_("code",[t._v("null")])]),t._v(" "),_("h2",{attrs:{id:"链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),_("p",[t._v("主要是对以下文章的理解总结：")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://neveryu.github.io/2017/02/18/js-memory-management-and-gc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("内存机制和垃圾回收"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=r.exports}}]);
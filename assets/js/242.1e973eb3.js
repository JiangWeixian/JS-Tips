(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{590:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ts-类型操作技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-类型操作技巧"}},[t._v("#")]),t._v(" TS - 类型操作技巧")]),t._v(" "),a("blockquote",[a("p",[t._v("有点像泛型那章节。但是期望更多的是如何操作"),a("code",[t._v("TS")]),t._v("类型"),a("strong",[t._v("Q&A")])])]),t._v(" "),a("h2",{attrs:{id:"如何定义函数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何定义函数类型"}},[t._v("#")]),t._v(" 如何定义函数类型")]),t._v(" "),a("p",[a("code",[t._v("type func = (params: q): Promise<{ data: string[] }>")])]),t._v(" "),a("h2",{attrs:{id:"如何获取interface的键值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何获取interface的键值"}},[t._v("#")]),t._v(" 如何获取interface的键值")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n  content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntype keys "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keyof x "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时keys = 'value' | 'content'")]),t._v("\n")])])]),a("p",[t._v("如果此时"),a("code",[t._v("x")]),t._v("并不是一个"),a("code",[t._v("inteface")]),t._v("而是一个真正的"),a("code",[t._v("js-object")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntype keys "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keyof typof x\n")])])]),a("p",[t._v("两段代码的作用是一致的。")]),t._v(" "),a("h2",{attrs:{id:"如何使用in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用in"}},[t._v("#")]),t._v(" 如何使用"),a("code",[t._v("in")])]),t._v(" "),a("p",[t._v("指的是如何在类型中使用。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("注意"),a("code",[t._v("in")]),t._v("只能够用于"),a("code",[t._v("type")]),t._v("关键字。")])]),t._v(" "),a("h2",{attrs:{id:"如何获取列表中单个元素类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何获取列表中单个元素类型"}},[t._v("#")]),t._v(" 如何获取列表中单个元素类型")]),t._v(" "),a("p",[t._v("例如定义")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("inteface data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntype datas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("当定义了")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" func "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们如何获取"),a("code",[t._v("datas")]),t._v("中单个元素类型。可以通过"),a("code",[t._v("type single = datas[0]")])]),t._v(" "),a("h2",{attrs:{id:"类型操作符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型操作符号"}},[t._v("#")]),t._v(" 类型操作符号")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("注意和"),a("code",[t._v("js")]),t._v("中"),a("code",[t._v("&& ||")]),t._v("区分开来。因为在"),a("code",[t._v("ts")]),t._v("中，操作类型是通过"),a("code",[t._v("& |")])])]),t._v(" "),a("p",[t._v("其中：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("&")]),t._v(" - 指的是取两个类型的合集")]),t._v(" "),a("li",[a("code",[t._v("|")]),t._v(" - 指的是两个类型的交集")])]),t._v(" "),a("h2",{attrs:{id:"returntypes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returntypes"}},[t._v("#")]),t._v(" ReturnTypes")]),t._v(" "),a("p",[t._v("用法是"),a("code",[t._v("ReturnTypes<typeof xxx>")]),t._v("。用处当然是获取"),a("code",[t._v("xxx")]),t._v("每个元素的类型了。")])])}),[],!1,null,null,null);s.default=n.exports}}]);
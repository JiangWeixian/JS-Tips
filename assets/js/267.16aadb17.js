(window.webpackJsonp=window.webpackJsonp||[]).push([[267],{503:function(a,t,e){"use strict";e.r(t);var r=e(0),o=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"umi-mock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#umi-mock"}},[a._v("#")]),a._v(" umi-mock")]),a._v(" "),e("h2",{attrs:{id:"good"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#good"}},[a._v("#")]),a._v(" good")]),a._v(" "),e("p",[a._v("好用的"),e("code",[a._v("api")]),a._v("文档数据生成。")]),a._v(" "),e("ul",[e("li",[a._v("可以模拟"),e("code",[a._v("api")]),a._v("请求，返回mock数据。")]),a._v(" "),e("li",[a._v("同时也可以通过"),e("code",[a._v("api")]),a._v("直接生成文档。")])]),a._v(" "),e("h2",{attrs:{id:"bad"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bad"}},[a._v("#")]),a._v(" bad")]),a._v(" "),e("p",[a._v("但是无法监听"),e("code",[a._v("mock data")]),a._v("的变化重新开启"),e("code",[a._v("mock server")]),a._v("。如果无法重新开启就没有办法让接口返回的数据更新。当前的办法是借助"),e("code",[a._v("npm-watch")]),a._v("进行监听执行监听任务。")]),a._v(" "),e("h2",{attrs:{id:"refs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[a._v("#")]),a._v(" refs")]),a._v(" "),e("p",[a._v("基于的"),e("code",[a._v("npm package")])]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.npmjs.com/package/roadhog-api-doc",target:"_blank",rel:"noopener noreferrer"}},[a._v("npm-roadhogdocapi"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=o.exports}}]);
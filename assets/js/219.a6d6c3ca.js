(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{566:function(_,r,t){"use strict";t.r(r);var e=t(0),v=Object(e.a)({},(function(){var _=this,r=_.$createElement,t=_._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"webapi-语法部分速写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webapi-语法部分速写"}},[_._v("#")]),_._v(" WebAPI - 语法部分速写")]),_._v(" "),t("blockquote",[t("p",[_._v("如何记忆")])]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#webapi---%E8%AF%AD%E6%B3%95%E9%83%A8%E5%88%86%E9%80%9F%E5%86%99"}},[_._v("WebAPI - 语法部分速写")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#11-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[_._v("1.1. 数据类型")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#111-array---typef-array--object"}},[_._v("1.1.1. array - (typef array > object)")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#112-string---typef-string--string"}},[_._v("1.1.2. string - (typef string > string)")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#113-boolean"}},[_._v("1.1.3. boolean")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#114-number"}},[_._v("1.1.4. number")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#115-mapset"}},[_._v("1.1.5. Map/Set")])])])]),_._v(" "),t("li",[t("a",{attrs:{href:"#12-object"}},[_._v("1.2. Object")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#13-reg"}},[_._v("1.3. Reg")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#14-error"}},[_._v("1.4. Error")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#15-math"}},[_._v("1.5. Math")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#16-date"}},[_._v("1.6. Date")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#17-%E6%95%B0%E6%8D%AE"}},[_._v("1.7. 数据")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#function"}},[_._v("function")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0"}},[_._v("全局函数")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#promise"}},[_._v("Promise")])]),_._v(" "),t("li",[t("a",{attrs:{href:"#generator"}},[_._v("Generator")])])])])])])]),_._v(" "),t("h2",{attrs:{id:"_1-1-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数据类型"}},[_._v("#")]),_._v(" 1.1. 数据类型")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("undefined")])]),_._v(" "),t("li",[t("code",[_._v("object")]),_._v(" - array, map, set")]),_._v(" "),t("li",[t("code",[_._v("string")])]),_._v(" "),t("li",[t("code",[_._v("boolean")])]),_._v(" "),t("li",[t("code",[_._v("number")])]),_._v(" "),t("li",[t("code",[_._v("Symbol")]),_._v(" - ES6")])]),_._v(" "),t("p",[_._v("创建类型的时候谨慎使用"),t("code",[_._v("new")])]),_._v(" "),t("h3",{attrs:{id:"_1-1-1-array-typef-array-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-array-typef-array-object"}},[_._v("#")]),_._v(" 1.1.1. array - (typef array > object)")]),_._v(" "),t("ul",[t("li",[_._v("减少数据会返回减少的那部分数据")]),_._v(" "),t("li",[_._v("增加数据会返回修改之后的数组长度")]),_._v(" "),t("li",[_._v("需要指定下标范围一般符合"),t("code",[_._v("[ )")]),_._v("原则")]),_._v(" "),t("li",[_._v("要知道那些是会修改数据")])]),_._v(" "),t("p",[_._v("从以下几个方面记忆")]),_._v(" "),t("ul",[t("li",[_._v("遍历方法 - 其中那些会返回数组(reduce比较容易忘记)")]),_._v(" "),t("li",[_._v("增加数据/删除数据")]),_._v(" "),t("li",[_._v("不会修改原始数据 - 查找reverse and sort")]),_._v(" "),t("li",[_._v("类型转换 - 其他数据到array，以及array到其他类型的数据")])]),_._v(" "),t("h3",{attrs:{id:"_1-1-2-string-typef-string-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-string-typef-string-string"}},[_._v("#")]),_._v(" 1.1.2. string - (typef string > string)")]),_._v(" "),t("ul",[t("li",[_._v("string是不允许修改原始数据的")]),_._v(" "),t("li",[_._v("数组中不修改数据的操作可以"),t("code",[_._v(".prototype.xx.call")]),_._v("重新作用到新对象上(或者string直接就有对应同名的方法)")])]),_._v(" "),t("p",[_._v("从以下几个方面记忆")]),_._v(" "),t("ul",[t("li",[_._v("查找 - 判断/查找index/查找str")]),_._v(" "),t("li",[_._v("修改数据(一定是返回了一个新的数据)  - 替换/补充/重复")]),_._v(" "),t("li",[_._v("删除空格")]),_._v(" "),t("li",[_._v("类型转换 - unicode编码，变为数组")])]),_._v(" "),t("h3",{attrs:{id:"_1-1-3-boolean"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-boolean"}},[_._v("#")]),_._v(" 1.1.3. boolean")]),_._v(" "),t("p",[t("code",[_._v("Boolean(true) !== new Boolean(true)")])]),_._v(" "),t("h3",{attrs:{id:"_1-1-4-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-number"}},[_._v("#")]),_._v(" 1.1.4. number")]),_._v(" "),t("ul",[t("li",[_._v("上限下限 - 这部分可以查看"),t("a",{attrs:{href:""}},[_._v("JS-大数")])]),_._v(" "),t("li",[_._v("取得某位数的数据")]),_._v(" "),t("li",[_._v("判断 - isNaN isSafe.. isInf...")]),_._v(" "),t("li",[_._v("提取数字")])]),_._v(" "),t("h3",{attrs:{id:"_1-1-5-map-set"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-map-set"}},[_._v("#")]),_._v(" 1.1.5. Map/Set")]),_._v(" "),t("p",[_._v("下标以及"),t("code",[_._v("[]")]),_._v("方法都是没有办法获取到里面的数据")]),_._v(" "),t("p",[t("strong",[_._v("Map")])]),_._v(" "),t("ul",[t("li",[_._v("判断")]),_._v(" "),t("li",[_._v("获取 - 键/值。注意获取得到是带有"),t("code",[_._v("iterator")]),_._v("。")]),_._v(" "),t("li",[_._v("设置/获取 - 只能够通过set/get")]),_._v(" "),t("li",[_._v("删除 - 删除某个元素(通过接口而不是关键字))或者清空")]),_._v(" "),t("li",[_._v("遍历 - for of")])]),_._v(" "),t("p",[t("strong",[_._v("Set")])]),_._v(" "),t("p",[_._v("没有"),t("code",[_._v("get")]),_._v("获取里面的数据。")]),_._v(" "),t("ul",[t("li",[_._v("添加 - 只能够末尾添加")]),_._v(" "),t("li",[_._v("删除 - 删除某个元素或者清空")]),_._v(" "),t("li",[_._v("判断")]),_._v(" "),t("li",[_._v("获取 - 数值，注意获取得到是带有"),t("code",[_._v("iterator")]),_._v("。")]),_._v(" "),t("li",[_._v("遍历 - for of")])]),_._v(" "),t("p",[t("strong",[_._v("带有Weak前缀的就是表示里面数据就只能是对象数据，与不带有Weak相比少了遍历的API")])]),_._v(" "),t("h2",{attrs:{id:"_1-2-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-object"}},[_._v("#")]),_._v(" 1.2. Object")]),_._v(" "),t("ul",[t("li",[_._v("获取属性 - 键/值/键值对\n"),t("ul",[t("li",[_._v("区分自身属性/获取以Symbol作为属性名的属性/父类属性/")])])]),_._v(" "),t("li",[_._v("获取/设置原型链")]),_._v(" "),t("li",[_._v("判断 - 判断原型链/判断自身属性/判断父类属性\n"),t("ul",[t("li",[_._v("判断原型链"),t("code",[_._v(".prototype.isPrototypeOf(xx)")]),_._v(" - xx输入的实例，或者"),t("code",[_._v("xx.prototype")])]),_._v(" "),t("li",[_._v("判断是否被封装，是否可扩展")])])]),_._v(" "),t("li",[_._v("复制 - "),t("a",{attrs:{href:""}},[_._v("区分create assign")])]),_._v(" "),t("li",[_._v("定义属性 - 定义方法就是将方法定义为"),t("code",[_._v("value")])]),_._v(" "),t("li",[_._v("遍历")]),_._v(" "),t("li",[_._v("seal frozen封装方法 - 前置可修改属性，其他和后者相同，啥都不能动")])]),_._v(" "),t("h2",{attrs:{id:"_1-3-reg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-reg"}},[_._v("#")]),_._v(" 1.3. Reg")]),_._v(" "),t("p",[_._v("见"),t("a",{attrs:{href:""}},[_._v("Reg")])]),_._v(" "),t("h2",{attrs:{id:"_1-4-error"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-error"}},[_._v("#")]),_._v(" 1.4. Error")]),_._v(" "),t("ul",[t("li",[_._v("创建错误的时候可以指定错误发生位置以及错误代码的行数")])]),_._v(" "),t("h2",{attrs:{id:"_1-5-math"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-math"}},[_._v("#")]),_._v(" 1.5. Math")]),_._v(" "),t("ul",[t("li",[_._v("三角函数")]),_._v(" "),t("li",[_._v("对数/指数/求根")]),_._v(" "),t("li",[_._v("内置数据 - PI/E")])]),_._v(" "),t("p",[t("code",[_._v("logab = logb/loga")])]),_._v(" "),t("h2",{attrs:{id:"_1-6-date"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-date"}},[_._v("#")]),_._v(" 1.6. Date")]),_._v(" "),t("ol",[t("li",[_._v("含有"),t("code",[_._v("Date")]),_._v("关键字的方法一般指的是月中的天，想要星期中的天是"),t("code",[_._v("Day")])]),_._v(" "),t("li",[_._v("utc关键字指的是世界时间")]),_._v(" "),t("li",[_._v("以"),t("code",[_._v("Date")]),_._v("可以区分 "),t("strong",[_._v("年月日")]),_._v("和 "),t("strong",[_._v("时分秒")]),_._v("，一帮都有针对这两个段的接口函数")])]),_._v(" "),t("h2",{attrs:{id:"_1-7-数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-数据"}},[_._v("#")]),_._v(" 1.7. 数据")]),_._v(" "),t("ol",[t("li",[_._v("使用ArrayBuffer创建Buffer")]),_._v(" "),t("li",[_._v("使用Dateview链接Buffer，设置其中数据类型，并修改其中数据")]),_._v(" "),t("li",[_._v("修改之后使用"),t("code",[_._v("Int16Array")]),_._v("此类型数据结构来创建一个数组，注意数据类型要对应")])]),_._v(" "),t("h2",{attrs:{id:"function"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[_._v("#")]),_._v(" function")]),_._v(" "),t("blockquote",[t("p",[_._v("并不是说完全由Object的全部方法，只有以下几个")])]),_._v(" "),t("ul",[t("li",[_._v("属性 - name/length(指定参数个数)/arguments")]),_._v(" "),t("li",[_._v("方法 - call/apply/bind/")]),_._v(" "),t("li",[_._v("toString")])]),_._v(" "),t("h3",{attrs:{id:"全局函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局函数"}},[_._v("#")]),_._v(" 全局函数")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/JiangWeixian/JS-Tips/blob/master/docs/Grammar/JS-%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0-encodeURI%26encodeURIcomponent.md",target:"_blank",rel:"noopener noreferrer"}},[_._v("encodeURI..."),t("OutboundLink")],1)]),_._v(" "),t("h3",{attrs:{id:"promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[_._v("#")]),_._v(" Promise")]),_._v(" "),t("ul",[t("li",[_._v("all or race - 接受一个promise对象构成的数组。其中all会将所有promise.resovle的返回结构构造一个数组")]),_._v(" "),t("li",[_._v("catch")]),_._v(" "),t("li",[_._v("finally")])]),_._v(" "),t("h3",{attrs:{id:"generator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[_._v("#")]),_._v(" Generator")]),_._v(" "),t("ol",[t("li",[_._v("有x个"),t("code",[_._v("yeild")]),_._v("就会有x+1个"),t("code",[_._v("next()")]),_._v("执行。")]),_._v(" "),t("li",[_._v("for of可以取代手动执行"),t("code",[_._v("next()")]),_._v("的方式")])]),_._v(" "),t("p",[_._v("返回的结构是"),t("code",[_._v("{value: xx, done: true or false}")])]),_._v(" "),t("p",[_._v("链接")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Generator",target:"_blank",rel:"noopener noreferrer"}},[_._v("Generator"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"http://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[_._v("注意阮一峰举例的传递参数例子"),t("OutboundLink")],1),_._v(" - 传递的传递给next的参数会替换上一次yeild的结构")])])])}),[],!1,null,null,null);r.default=v.exports}}]);
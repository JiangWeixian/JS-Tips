(window.webpackJsonp=window.webpackJsonp||[]).push([[286],{449:function(v,_,t){"use strict";t.r(_);var o=t(0),s=Object(o.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"代理跨域-原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理跨域-原理"}},[v._v("#")]),v._v(" 代理跨域 - 原理")]),v._v(" "),t("blockquote",[t("p",[v._v("跨域只发生在浏览器和服务器之间")])]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E4%BB%A3%E7%90%86%E8%B7%A8%E5%9F%9F---%E5%8E%9F%E7%90%86"}},[v._v("代理跨域 - 原理")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86---%E8%B7%A8%E5%9F%9F"}},[v._v("前置知识 - 跨域")])]),v._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8E%9F%E7%90%86%E8%A7%A3%E9%87%8A"}},[v._v("原理解释")])])])])]),v._v(" "),t("h2",{attrs:{id:"前置知识-跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识-跨域"}},[v._v("#")]),v._v(" 前置知识 - 跨域")]),v._v(" "),t("p",[v._v("跨域一般发生在浏览器和服务器之间。")]),v._v(" "),t("p",[v._v("只要浏览器所浏览的页面为"),t("code",[v._v("(A)https://www.a.com")]),v._v("，而服务器的地址为"),t("code",[v._v("(B)https://www.b.com")]),v._v("。"),t("code",[v._v("A->B")]),v._v("发起了请求，那么就会出现 "),t("strong",[v._v("跨域的问题")]),v._v("。")]),v._v(" "),t("h2",{attrs:{id:"原理解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理解释"}},[v._v("#")]),v._v(" 原理解释")]),v._v(" "),t("p",[t("strong",[v._v("但是重点注意"),t("a",{attrs:{href:"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86---%E8%B7%A8%E5%9F%9F"}},[v._v("跨域")])]),v._v(" 中提到的跨域发生在浏览器和服务器之间，但是不会发生在 "),t("strong",[v._v("服务器和服务器之间。")])]),v._v(" "),t("blockquote",[t("p",[v._v("这也就是为什么说 "),t("strong",[v._v("跨域是浏览器的安全策略。")])])]),v._v(" "),t("p",[v._v("以上，也就是代理跨域实现的关键。")]),v._v(" "),t("p",[v._v("首先回顾一下前端开发的情形，我们会在"),t("code",[v._v("localhost: 8080")]),v._v("打开我们的页面。"),t("strong",[v._v("可是一般情况下，打开"),t("code",[v._v("html")]),v._v("文件")]),v._v(" 是通过双击"),t("code",[v._v(".html")]),v._v("文件然后在浏览器打开的。"),t("strong",[v._v("那么"),t("code",[v._v("localhost:8080")]),v._v("能够显示页面的原理是什么？")])]),v._v(" "),t("blockquote",[t("p",[v._v("毫无疑问，"),t("code",[v._v("webpack")]),v._v("建立一个小型的服务器；")])]),v._v(" "),t("p",[v._v("同时我们知道"),t("code",[v._v("webpack")]),v._v("可以实现反向代理，配置项具体为：将原本"),t("code",[v._v("localhost:3000/song")]),v._v("请求地址，在"),t("code",[v._v("webpack")]),v._v("建立的服务器中同样也建立了一个"),t("code",[v._v("localhost:8080/song")]),v._v("的地址(这是通过配置项目创建的)")]),v._v(" "),t("p",[t("strong",[v._v("页面地址向代理服务器")])]),v._v(" "),t("p",[v._v("那么此时页面地址是"),t("code",[v._v("localhost:8080")]),v._v("，请求地址由"),t("code",[v._v("localhost:3000/song->localhost:8080/song")]),v._v("。这样，页面地址和请求地址就存在与相同服务器上，也就不存在跨域问题了。")]),v._v(" "),t("p",[t("strong",[v._v("代理服务器向真正服务器")])]),v._v(" "),t("p",[v._v("由于服务器之间不存在跨域，所以"),t("code",[v._v("(代理服务器)localhost:8080")]),v._v("可以向"),t("code",[v._v("(真正服务器)localhost:3000")]),v._v("发送请求")])])}),[],!1,null,null,null);_.default=s.exports}}]);
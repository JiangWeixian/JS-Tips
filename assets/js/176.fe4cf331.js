(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{508:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"stylus-继承父类classname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stylus-继承父类classname"}},[s._v("#")]),s._v(" stylus - 继承父类className")]),s._v(" "),t("p",[s._v("起因为当定义一个模块"),t("code",[s._v("admin")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div className"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("p className"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'admin_content'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("p",[s._v("使用"),t("code",[s._v("bem")]),s._v("的命名规则，"),t("code",[s._v("admin_content")]),s._v("代表的是它的子类元素。")]),s._v(" "),t("p",[s._v("那么在"),t("code",[s._v(".styl")]),s._v("文件中书写一定是")]),s._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[s._v(".admin\n\n.admin_content\n")])])]),t("p",[s._v("（但是如果能偷懒最好就偷懒，绝不多写一行代码）是否有办法可以让我们省略"),t("code",[s._v("admin")]),s._v("的书写，从另外一种意义上来说，就是子类自动继承父类的名字。"),t("strong",[s._v("我们只需要拼接字符串，添加状态，添加子类得到最终的子类"),t("code",[s._v("classname")])])]),s._v(" "),t("p",[t("code",[s._v("stylus")]),s._v("中"),t("code",[s._v("&")]),s._v("代表的就是父类的名字。")]),s._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[s._v(".admin\n  &"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("hover\n")])])]),t("p",[s._v("这种写法中"),t("code",[s._v("&")]),s._v("代表的就是父类"),t("code",[s._v("classname")]),s._v("。")]),s._v(" "),t("p",[s._v("更为灵活的是：")]),s._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[s._v(".admin\n  &_content\n")])])]),t("p",[s._v("此时会被编译为")]),s._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[s._v(".admin\n\n.admin_content\n")])])]),t("p",[t("strong",[s._v("重要的是编译出来的两个"),t("code",[s._v("classname")]),s._v("并没有嵌套的关系，而是同级别，加了"),t("code",[s._v("prefix")]),s._v("而已。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);
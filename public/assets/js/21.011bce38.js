(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{238:function(v,_,e){v.exports=e.p+"assets/img/virtualdomtree.88fe83ec.png"},268:function(v,_,e){"use strict";e.r(_);var t=e(0),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"前端框架之间对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端框架之间对比"}},[v._v("#")]),v._v(" 前端框架之间对比")]),v._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#前置知识"}},[v._v("前置知识")]),t("ul",[t("li",[t("a",{attrs:{href:"#什么是virtual-dom"}},[v._v("什么是virtual dom")])]),t("li",[t("a",{attrs:{href:"#如何实现virtual-dom简易版本"}},[v._v("如何实现virtual dom简易版本")])])])]),t("li",[t("a",{attrs:{href:"#前端框架类型"}},[v._v("前端框架类型")]),t("ul",[t("li",[t("a",{attrs:{href:"#vue"}},[v._v("Vue")])]),t("li",[t("a",{attrs:{href:"#angular"}},[v._v("Angular")])]),t("li",[t("a",{attrs:{href:"#react"}},[v._v("React")])])])]),t("li",[t("a",{attrs:{href:"#更为细节的对比"}},[v._v("更为细节的对比")]),t("ul",[t("li",[t("a",{attrs:{href:"#回调函数"}},[v._v("回调函数")])])])])])]),t("p"),v._v(" "),t("h2",{attrs:{id:"前置知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前置知识"}},[v._v("#")]),v._v(" 前置知识")]),v._v(" "),t("p",[v._v("框架的进化流程大致：")]),v._v(" "),t("ol",[t("li",[v._v("数据完全由后台给定，前端只有根据后台数据来更新渲染，控制权少")]),v._v(" "),t("li",[v._v("引入数据模型，当前端的数据模型改变的时候触发一些事件，前端有义务来控制当这些事件发生之后该做些什么")]),v._v(" "),t("li")]),v._v(" "),t("h3",{attrs:{id:"什么是virtual-dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是virtual-dom"}},[v._v("#")]),v._v(" 什么是virtual dom")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.jianshu.com/p/bef1c1ee5a0e",target:"_blank",rel:"noopener noreferrer"}},[v._v("参考文章-译文-十分细致的介绍"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"http://teropa.info/blog/2015/03/02/change-and-its-detection-in-javascript-frameworks.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("参考文章-原文"),t("OutboundLink")],1)])]),v._v(" "),t("p",[v._v("就现在而言，数据和页面绑定十分紧密，数据更新带动页面更新。而在没有这些框架之前，每次数据更新都要向后台请求数据。"),t("strong",[v._v("而现在我们有了新的方式：数据和DOM节点绑定，数据更新然后节点更新。")]),v._v("，类如"),t("code",[v._v("angularJS")]),v._v("。")]),v._v(" "),t("p",[v._v("虚拟DOM是"),t("code",[v._v("React")]),v._v("引入的，"),t("code",[v._v("virtual dom")]),v._v("和"),t("code",[v._v("real dom")]),v._v("区别就在于，数据更新之后并不直接渲染"),t("code",[v._v("real dom")]),v._v("，而是"),t("code",[v._v("virtual dom")]),v._v("。至于是否要渲染到"),t("code",[v._v("real dom")]),v._v("，就要对比数据更新之后的"),t("code",[v._v("virtual dom")]),v._v("和之前"),t("code",[v._v("virtual dom")]),v._v("之间的区别。")]),v._v(" "),t("p",[t("code",[v._v("virtual dom")]),v._v("本质上又是什么？是怎样的数据类型。就我的理解来看：")]),v._v(" "),t("p",[t("code",[v._v("virtual dom")]),v._v("可以是"),t("code",[v._v("js")]),v._v("对象，就"),t("code",[v._v("es6")]),v._v("阶段的话。可以是一个"),t("code",[v._v("class")]),v._v("。那么渲染数据更新流程就可以是以下方式;")]),v._v(" "),t("ol",[t("li",[v._v("先有数据")]),v._v(" "),t("li",[v._v("然后根据数据生成"),t("code",[v._v("virtual dom{0}")])]),v._v(" "),t("li",[v._v("数据改变，改变"),t("code",[v._v("virtual dom{1}")]),v._v("。和"),t("code",[v._v("virtual dom{0}")]),v._v("比较，如果变化了，就更新"),t("code",[v._v("dom")]),v._v("。至于怎么检查是否发生了数据更新。就是另外一回事了。")])]),v._v(" "),t("h3",{attrs:{id:"如何实现virtual-dom简易版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何实现virtual-dom简易版本"}},[v._v("#")]),v._v(" 如何实现virtual dom简易版本")]),v._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.zhihu.com/question/29504639",target:"_blank",rel:"noopener noreferrer"}},[v._v("来看看别人是怎么实现的？ - 解析"),t("OutboundLink")],1)]),v._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/Matt-Esch/virtual-dom",target:"_blank",rel:"noopener noreferrer"}},[v._v("github实现版本"),t("OutboundLink")],1)])]),v._v(" "),t("p",[v._v("以上了解了思路，最最关键就是实现数据和视图之间的绑定。一旦数据变化，就触发更新"),t("code",[v._v("DOM")]),v._v("的函数。")]),v._v(" "),t("ol",[t("li",[v._v("构造"),t("code",[v._v("virtual dom")]),v._v("结构（"),t("code",[v._v("JS")]),v._v("数据类型），不限制写法，只要能够通过"),t("code",[v._v("virtual dom")]),v._v("恢复出真正的"),t("code",[v._v("dom")]),v._v("结构就可以了。")]),v._v(" "),t("li",[v._v("构造"),t("code",[v._v("render")]),v._v("函数（就像是"),t("code",[v._v("vue react")]),v._v("那样），根据"),t("code",[v._v("virtual dom")]),v._v("实现真正节点生成。")]),v._v(" "),t("li",[v._v("数据更新不是实现重点，因为这是用户行为。"),t("strong",[v._v("重点在于如何检测数据更新")])])]),v._v(" "),t("p",[v._v("假设我们有以下树结构：")]),v._v(" "),t("p",[t("img",{attrs:{src:e(238),alt:"virtual dom tree"}})]),v._v(" "),t("ul",[t("li",[v._v("对树进行"),t("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2",target:"_blank",rel:"noopener noreferrer"}},[v._v("深度遍历"),t("OutboundLink")],1),v._v("，得到数组结构，得到每个节点标识，有利于比较虚拟"),t("code",[v._v("DOM")]),v._v("差异，以及后续更新。（"),t("strong",[v._v("看了维基百科还是有问题，请看"),t("a",{attrs:{href:"https://juejin.im/entry/5912bb9544d904007b0384f1",target:"_blank",rel:"noopener noreferrer"}},[v._v("这里"),t("OutboundLink")],1)]),v._v("）")]),v._v(" "),t("li",[v._v("节点差异记录在数组内，并记录差异类型。不同差异决定如何对真实"),t("code",[v._v("dom")]),v._v("如何操作。甚至节点只是移动了也会有差异类型，让框架知道只需要移动节点而不需要重新创建和差异节点。")])]),v._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[v._v("将差异映射到真实"),t("code",[v._v("dom")]),v._v("上，依赖于之前创建的"),t("code",[v._v("virtual dom")]),v._v("结构。")])]),v._v(" "),t("h2",{attrs:{id:"前端框架类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端框架类型"}},[v._v("#")]),v._v(" 前端框架类型")]),v._v(" "),t("p",[t("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("阮一峰科普"),t("OutboundLink")],1)]),v._v(" "),t("ul",[t("li",[v._v("MVC - 数据，视图，控制器\n"),t("ul",[t("li",[v._v("用户在视图上传递指令给控制器，控制器改变数据，数据在映射到视图上。"),t("strong",[v._v("不过不一定是这样的流程，用户有直接控制控制器，视图，或者数据的能力")])])])]),v._v(" "),t("li",[v._v("MVP - 特别少见，介绍也很少。特点在于\n"),t("ul",[t("li",[v._v("三个模块之间一定是双向的（MVC一般是单的，但是没有规定）")]),v._v(" "),t("li",[v._v("v和m之间都要通过p来进行传递数据")])])]),v._v(" "),t("li",[v._v("MVVM - VM含义为"),t("code",[v._v("viewmodel")]),v._v("，主流框架基本都是这个类型。类如"),t("code",[v._v("MVP")]),v._v("，不过v和vm之间是自动双向通信过程。")])]),v._v(" "),t("p",[v._v("区分这三者有点难度，因为是很细节的差别。可以看"),t("a",{attrs:{href:"http://www.cnblogs.com/xishuai/p/mvc-mvp-mvvm-angularjs-knockoutjs-backbonejs-reactjs-emberjs-avalonjs.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("这里"),t("OutboundLink")],1),v._v("，简单总结为：")]),v._v(" "),t("ol",[t("li",[v._v("视图渲染，"),t("code",[v._v("MVC")]),v._v("有"),t("code",[v._v("View")]),v._v("控制渲染("),t("code",[v._v("compiler")]),v._v(")，"),t("code",[v._v("Controller")]),v._v("负责的只是通知作用。而在"),t("code",[v._v("MVP")]),v._v("是"),t("code",[v._v("P")]),v._v("，而在"),t("code",[v._v("MVVM")]),v._v("内部则是"),t("code",[v._v("Viewmodel")]),v._v("。")]),v._v(" "),t("li",[t("code",[v._v("MVVM")]),v._v("是"),t("code",[v._v("MVP")]),v._v("的进化版本，最重要就是双向绑定（自动挡），任何一个方面发生变化，都会进一步影响到其他两个方面。")])]),v._v(" "),t("p",[v._v("将"),t("code",[v._v("HTML")]),v._v("节点是为"),t("strong",[v._v("View")]),v._v("，将数据视为"),t("code",[v._v("Model")]),v._v("。"),t("code",[v._v("ViewModel")]),v._v("就是两者之间的桥梁。")]),v._v(" "),t("ul",[t("li",[v._v("在"),t("code",[v._v("Vue")]),v._v("就是类比"),t("code",[v._v("ViewModel")]),v._v("的就是数据劫持（包含观察者，订阅者，compile）。"),t("code",[v._v("React")]),v._v("应该也是。")])]),v._v(" "),t("h3",{attrs:{id:"vue"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[v._v("#")]),v._v(" Vue")]),v._v(" "),t("p",[v._v("类似"),t("code",[v._v("React")]),v._v("，因为使用到了"),t("code",[v._v("virtual dom")]),v._v("。不过最新的"),t("code",[v._v("Angular")]),v._v("好像也加入了。")]),v._v(" "),t("ul",[t("li",[v._v("语法上更接近"),t("code",[v._v("html js css")]),v._v("结构，不像是"),t("code",[v._v("react")]),v._v("全是"),t("code",[v._v("js")])]),v._v(" "),t("li",[v._v("数据监听上是"),t("strong",[v._v("数据劫持")])]),v._v(" "),t("li",[v._v("重点在于双向绑定的方式")])]),v._v(" "),t("p",[t("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/instance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%9B%BE%E7%A4%BA",target:"_blank",rel:"noopener noreferrer"}},[v._v("生命周期图示可以帮组理解"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("strong",[v._v("如何实现双向绑定的方式？")]),v._v("，实现方式有发布订阅模式，"),t("code",[v._v("Angular")]),v._v("的脏检查模式，或者是"),t("code",[v._v("Vue")]),v._v("的数据劫持模式。可以参考"),t("a",{attrs:{href:"https://segmentfault.com/a/1190000006599500",target:"_blank",rel:"noopener noreferrer"}},[v._v("这里"),t("OutboundLink")],1),v._v("。"),t("code",[v._v("Vue")]),v._v("数据集劫持模式结合了发布订阅，其关键点在于：")]),v._v(" "),t("ol",[t("li",[v._v("实现"),t("code",[v._v("Observer")]),v._v("(观察者) - 也就是对某些属性，定义"),t("code",[v._v("setter&getter")]),v._v("。关键就在于这个"),t("code",[v._v("setter")]),v._v("，监听数据变化。也相当于一个观察者。")]),v._v(" "),t("li",[v._v("定义一个"),t("strong",[v._v("订阅者")]),v._v("（"),t("code",[v._v("Watcher")]),v._v("，可以是一个数组，来维护谁需要这些数据），也就是谁需要这些数据。")]),v._v(" "),t("li",[t("code",[v._v("setter")]),v._v("改变数据之后，通知订阅者，每一个订阅者本身可能有一个"),t("code",[v._v("update")]),v._v("函数，当被通知的时候，就更新视图之类的。")])]),v._v(" "),t("h3",{attrs:{id:"angular"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#angular"}},[v._v("#")]),v._v(" Angular")]),v._v(" "),t("p",[v._v("MVVM")]),v._v(" "),t("p",[v._v("建立数据和视图之间联系，每次数据更新，就更新部分"),t("code",[v._v("DOM")]),v._v("（也就是数据和"),t("code",[v._v("DOM")]),v._v("绑定）。")]),v._v(" "),t("p",[v._v("不过在数据更新之上，还有一个"),t("strong",[v._v("观察者")]),v._v("，来检测是否数据更新，是否进行UI更新。")]),v._v(" "),t("p",[v._v("其特点为：")]),v._v(" "),t("ul",[t("li",[v._v("任意发生事件，都会触发观察者")]),v._v(" "),t("li",[v._v("只会更新部分"),t("code",[v._v("DOM")]),v._v("，不会重新渲染全部页面")]),v._v(" "),t("li",[v._v("数据监听上是"),t("strong",[v._v("脏检查")])])]),v._v(" "),t("h3",{attrs:{id:"react"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[v._v("#")]),v._v(" React")]),v._v(" "),t("p",[v._v("虚拟"),t("code",[v._v("DOM")]),v._v("的应用！")]),v._v(" "),t("ul",[t("li",[v._v("有一个由"),t("code",[v._v("Javascript")]),v._v("构成的虚拟"),t("code",[v._v("DOM")]),v._v("结构。")]),v._v(" "),t("li",[v._v("每次数据变化，渲染的所有"),t("code",[v._v("UI")]),v._v("。不过这里的"),t("code",[v._v("UI")]),v._v("需要打上引号，因为指的是虚拟"),t("code",[v._v("DOM")]),v._v("的"),t("code",[v._v("UI")]),v._v("。进一步的"),t("code",[v._v("React")]),v._v("比较得到的新旧虚拟"),t("code",[v._v("DOM")]),v._v("，来决定是否渲染。此时的渲染就是可以跟踪到某个具体的被改变的节点元素。流程如下：\n"),t("ol",[t("li",[v._v("数据变化")]),v._v(" "),t("li",[v._v("得到新的虚拟"),t("code",[v._v("DOM")]),v._v("，和旧的比较")]),v._v(" "),t("li",[v._v("得到被改变的那些节点")]),v._v(" "),t("li",[v._v("更新具体的"),t("code",[v._v("DOM")]),v._v("阶段")])])])]),v._v(" "),t("h2",{attrs:{id:"更为细节的对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更为细节的对比"}},[v._v("#")]),v._v(" 更为细节的对比")]),v._v(" "),t("h3",{attrs:{id:"回调函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回调函数"}},[v._v("#")]),v._v(" 回调函数")]),v._v(" "),t("p",[v._v("对"),t("code",[v._v("React")]),v._v("来说，给组件添加回调函数和平时"),t("code",[v._v("dom")]),v._v("没事区别，如"),t("code",[v._v("a.onclikc = ...")]),v._v("。包括那些"),t("code",[v._v("event")]),v._v("的获取，传递函数等。")]),v._v(" "),t("p",[v._v("但是对"),t("code",[v._v("Vue")]),v._v("来说有点不太一样了。如")]),v._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<")]),v._v("a\n  onClick"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"handleclick(e)"')]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("/")]),v._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v("\n")])])]),t("blockquote",[t("p",[v._v("好像是"),t("code",[v._v("handleclick")]),v._v("与"),t("code",[v._v("handleclick(e)")]),v._v("并没有什么区别。注意这个"),t("code",[v._v("e")]),v._v("是来自"),t("code",[v._v("data")]),v._v("等数据来源（或者列表）。如果想要"),t("code",[v._v("event")]),v._v("，必须通过"),t("code",[v._v("$event")]),v._v("进行传递。"),t("strong",[v._v("必然！"),t("code",[v._v("Vue")]),v._v("对语法解析依赖更为严重。")])])])])}),[],!1,null,null,null);_.default=r.exports}}]);
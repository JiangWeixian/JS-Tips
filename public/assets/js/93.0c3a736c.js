(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{394:function(v,_,e){"use strict";e.r(_);var t=e(0),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"js-基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-基本概念"}},[v._v("#")]),v._v(" JS - 基本概念")]),v._v(" "),e("blockquote",[e("p",[v._v("介绍基础语法知识（这部分我会快速略过）")])]),v._v(" "),e("p",[v._v("这部分更推荐"),e("a",{attrs:{href:""}},[v._v("youdontkonwjs")])]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#js---%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[v._v("JS - 基本概念")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E8%A7%84%E5%88%99"}},[v._v("规则")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#typeof"}},[v._v("typeof")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#%E7%B1%BB%E5%9E%8B"}},[v._v("类型")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#boolean%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84"}},[v._v("Boolean(**)需要注意的")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#number%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84"}},[v._v("Number(**)需要注意的")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#nan---%E5%B1%9E%E4%BA%8Enumber"}},[v._v("NaN - 属于Number")])])])]),v._v(" "),e("li",[e("a",{attrs:{href:"#parseint--tostring"}},[v._v("parseInt & toString")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#string"}},[v._v("String")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#object"}},[v._v("Object")])])])]),v._v(" "),e("li",[e("a",{attrs:{href:"#%E6%93%8D%E4%BD%9C%E7%AC%A6"}},[v._v("操作符")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#a%E5%92%8Ca---%E5%A4%9A%E4%B9%88%E7%97%9B%E7%9A%84%E9%A2%86%E6%82%9F"}},[v._v("++a和a++ - 多么痛的领悟")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#a%E5%92%8Ca--b"}},[v._v("+a和a + b")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#"}},[v._v("!")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#-or-"}},[v._v("&& or ||")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6----or-"}},[v._v("关系运算符 - > or >=")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#---%E9%9C%80%E8%A6%81%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83"}},[v._v("== - 需要转换为数值类型比较")])]),v._v(" "),e("li",[e("a",{attrs:{href:"#%E5%AF%B9%E8%B1%A1--%E5%AF%B9%E8%B1%A1"}},[v._v("对象 == 对象")])])])])])]),v._v(" "),e("li",[e("a",{attrs:{href:"#%E5%85%B3%E4%BA%8Eundefined-and-null"}},[v._v("关于"),e("code",[v._v("undefined and null")])])])])])]),v._v(" "),e("h2",{attrs:{id:"规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[v._v("#")]),v._v(" 规则")]),v._v(" "),e("p",[v._v("以下每个分支都是规则。说几个没有提及的：")]),v._v(" "),e("ol",[e("li",[e("code",[v._v("==")]),v._v("中的类型转换，存在"),e("code",[v._v("boolean->number or string->number")]),v._v("。但是不存在"),e("code",[v._v("some->boolean->number")]),v._v("，只有"),e("code",[v._v("some->string->number")]),v._v("。"),e("strong",[v._v("转换为number，对象类型必须经过"),e("code",[v._v("string")]),v._v("步骤。")])])]),v._v(" "),e("h2",{attrs:{id:"typeof"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[v._v("#")]),v._v(" typeof")]),v._v(" "),e("p",[e("code",[v._v("typeof")]),v._v("能够返回的数据类型。")]),v._v(" "),e("ul",[e("li",[v._v("undefined - "),e("code",[v._v("null == undefined")]),v._v("为"),e("code",[v._v("true")])]),v._v(" "),e("li",[v._v("number")]),v._v(" "),e("li",[v._v("string")]),v._v(" "),e("li",[e("strong",[v._v("function")])]),v._v(" "),e("li",[v._v("object")]),v._v(" "),e("li",[v._v("boolean")])]),v._v(" "),e("p",[e("code",[v._v("ES6")]),v._v("新增加了"),e("code",[v._v("symbol")]),v._v("；"),e("code",[v._v("array or set")]),v._v("的"),e("code",[v._v("typeof")]),v._v("返回类型为"),e("code",[v._v("object")]),v._v("。")]),v._v(" "),e("p",[v._v("并不意味着上面就是"),e("code",[v._v("JavaScript")]),v._v("的数据类型。一般来说我们认为"),e("code",[v._v("JavaScript")]),v._v("数据类型为：")]),v._v(" "),e("ul",[e("li",[v._v("undefined")]),v._v(" "),e("li",[v._v("number")]),v._v(" "),e("li",[v._v("string")]),v._v(" "),e("li",[v._v("object")]),v._v(" "),e("li",[v._v("boolean")])]),v._v(" "),e("p",[v._v("甚至细分除了"),e("code",[v._v("object")]),v._v("之外是 "),e("a",{attrs:{href:"https://github.com/JiangWeixian/JS-Tips/blob/master/Grammar/JS%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%B7%AE%E5%BC%82.md",target:"_blank",rel:"noopener noreferrer"}},[e("strong",[v._v("值类型数据")]),e("OutboundLink")],1),v._v("。")]),v._v(" "),e("h2",{attrs:{id:"类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[v._v("#")]),v._v(" 类型")]),v._v(" "),e("p",[e("strong",[v._v("如果")]),v._v("涉及到类型转换关系，一般有三种：")]),v._v(" "),e("ol",{attrs:{start:"0"}},[e("li",[e("code",[v._v("falsy or truty")])]),v._v(" "),e("li",[e("code",[v._v("valueof")])]),v._v(" "),e("li",[e("code",[v._v("toString->valueof")])]),v._v(" "),e("li",[e("code",[v._v("toString")])])]),v._v(" "),e("p",[e("strong",[v._v("注意boolean的valueof都是转化为0 or 1的结果。")])]),v._v(" "),e("p",[v._v("不太好总结，只能记忆什么时候应用什么规则。")]),v._v(" "),e("h3",{attrs:{id:"boolean-需要注意的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#boolean-需要注意的"}},[v._v("#")]),v._v(" Boolean(**)需要注意的")]),v._v(" "),e("p",[v._v("如果通过"),e("code",[v._v("Boolean(**)")]),v._v("来得到"),e("code",[v._v("true or false")]),v._v("，那么就要涉及到"),e("a",{attrs:{href:"https://github.com/JiangWeixian/JS-Tips/blob/master/Grammar/JS-falsy%26turthy.md",target:"_blank",rel:"noopener noreferrer"}},[v._v("falsy or truthy"),e("OutboundLink")],1),v._v("的列表数值。")]),v._v(" "),e("h3",{attrs:{id:"number-需要注意的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#number-需要注意的"}},[v._v("#")]),v._v(" Number(**)需要注意的")]),v._v(" "),e("p",[e("strong",[v._v("Number转换规则很重要")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("如果是"),e("code",[v._v("boolean")]),v._v("就是"),e("code",[v._v("0 or 1")]),v._v("简单转换关系。")])]),v._v(" "),e("li",[e("p",[v._v("如果转换的对象是"),e("code",[v._v("string")]),v._v("，有些可以是数字，而另外一些是"),e("code",[v._v("NaN")])])])]),v._v(" "),e("p",[e("strong",[v._v("如果转换的对象是对象")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("优先调用"),e("code",[v._v("valueof")]),v._v("，如果数值是"),e("code",[v._v("NaN")]),v._v("。那么再调用"),e("code",[v._v("toString->valueof")]),v._v("。")])]),v._v(" "),e("li",[e("p",[v._v("调用了"),e("code",[v._v("valueof")]),v._v("如果得到对象，那么再调用"),e("code",[v._v("toString->valueof")]),v._v("。")])])]),v._v(" "),e("p",[v._v("情况在于如果第2步和第3步"),e("code",[v._v("valueof")]),v._v("结果为"),e("code",[v._v("string")]),v._v("，那么就根据"),e("code",[v._v("string")]),v._v("和"),e("code",[v._v("number")]),v._v("之间得转换规则来。"),e("code",[v._v("string")]),v._v("能转换为数字就为数字，不能得就变为"),e("code",[v._v("NaN")])]),v._v(" "),e("h4",{attrs:{id:"nan-属于number"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nan-属于number"}},[v._v("#")]),v._v(" NaN - 属于Number")]),v._v(" "),e("p",[v._v("一个自身不等于自身的数值。")]),v._v(" "),e("h3",{attrs:{id:"parseint-tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parseint-tostring"}},[v._v("#")]),v._v(" parseInt & toString")]),v._v(" "),e("p",[e("code",[v._v("parseInt")]),v._v("可以实现 "),e("strong",[v._v("多进制到十进制转换")]),v._v("。")]),v._v(" "),e("p",[e("code",[v._v("toString")]),v._v("实现 "),e("strong",[v._v("十进制到多进制转换")]),v._v("。")]),v._v(" "),e("p",[v._v("含有参数可指定转换关系。")]),v._v(" "),e("h3",{attrs:{id:"string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[v._v("#")]),v._v(" String")]),v._v(" "),e("p",[v._v("不可改变。")]),v._v(" "),e("p",[v._v("所以想要通过"),e("code",[v._v(".prototype.xx.call")]),v._v("方法来对"),e("code",[v._v("string")]),v._v("实现调用在其他类型上面的函数，如果"),e("code",[v._v("xx")]),v._v("会改变自身，就无法实现调用。")]),v._v(" "),e("p",[e("strong",[v._v("特别注意")])]),v._v(" "),e("p",[e("code",[v._v("string")]),v._v("上调用"),e("code",[v._v("+")]),v._v("，是使用"),e("code",[v._v("toString")]),v._v("进行类型转换")]),v._v(" "),e("h3",{attrs:{id:"object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object"}},[v._v("#")]),v._v(" Object")]),v._v(" "),e("p",[v._v("所有"),e("code",[v._v("object")]),v._v("都有"),e("code",[v._v("constructor")])]),v._v(" "),e("h2",{attrs:{id:"操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[v._v("#")]),v._v(" 操作符")]),v._v(" "),e("h3",{attrs:{id:"a和a-多么痛的领悟"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a和a-多么痛的领悟"}},[v._v("#")]),v._v(" ++a和a++ - 多么痛的领悟")]),v._v(" "),e("p",[v._v("关键在于你需要怎么解释他。")]),v._v(" "),e("p",[v._v("++a作用在语句表达是之前，后面作用在语句表达式之后。")]),v._v(" "),e("p",[v._v("语句表达式含义为 "),e("strong",[v._v("一行代码")]),v._v(": "),e("code",[v._v("++a")]),v._v("在 "),e("strong",[v._v("一行代码")]),v._v("执行之前生效，另一个在 "),e("strong",[v._v("执行之后")])]),v._v(" "),e("p",[e("strong",[v._v("注意")])]),v._v(" "),e("p",[e("code",[v._v("++")]),v._v("或者其他设计类型转换的 "),e("strong",[v._v("操作符号")]),v._v("，优先调用"),e("code",[v._v("valueof")]),v._v("；如果不存在"),e("code",[v._v("valueof")]),v._v("或者"),e("code",[v._v("valueof")]),v._v("的返回数值是"),e("code",[v._v("NaN")]),v._v("的话，那么就先调用"),e("code",[v._v("toString")]),v._v("，然后调用"),e("code",[v._v("valueOf")])]),v._v(" "),e("h3",{attrs:{id:"a和a-b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a和a-b"}},[v._v("#")]),v._v(" +a和a + b")]),v._v(" "),e("p",[v._v("如果出现"),e("code",[v._v("var num = +a")]),v._v("仅仅只有这样，遵循"),e("code",[v._v("Number")]),v._v("转换规则")]),v._v(" "),e("p",[e("strong",[v._v("a + b")])]),v._v(" "),e("p",[v._v("情况特别复杂。首先我们要知道"),e("code",[v._v("+")]),v._v("支持得是"),e("code",[v._v("string")]),v._v("相加。")]),v._v(" "),e("ol",[e("li",[v._v("优先对两个进行"),e("code",[v._v("valueof")]),v._v("，如果得到结果是字符串或者数字，就停止")]),v._v(" "),e("li",[v._v("如果有一个为"),e("code",[v._v("obj(array之类的)")]),v._v("或者"),e("code",[v._v("NaN")]),v._v("，那么就对其进行"),e("code",[v._v("toString->valueof")])])]),v._v(" "),e("p",[v._v("但是问题会出现在"),e("code",[v._v("[]+{} and {}+[]")]),v._v("上面。")]),v._v(" "),e("p",[v._v("第一个结果为"),e("code",[v._v("[object object]")]),v._v("，第二个为0。再"),e("a",{attrs:{href:"https://github.com/getify/You-Dont-Know-JS/blob/1ed-zh-CN/types%20%26%20grammar/ch5.md",target:"_blank",rel:"noopener noreferrer"}},[v._v("youdontkonwjs有解释"),e("OutboundLink")],1)]),v._v(" "),e("p",[v._v("从左到右边解析，第一个就是总结转换规则。")]),v._v(" "),e("p",[v._v("但是第二个，由于遇到了"),e("code",[v._v("{}")]),v._v("("),e("strong",[v._v("关键在于它是空得，且直接写出")]),v._v(")，所以 "),e("strong",[v._v("它是解析为代码段，类似于function那里的{}")]),v._v("。所以第二个就变为了"),e("code",[v._v("+[]")]),v._v("。所以就是"),e("code",[v._v("+")]),v._v("得转换规则。")]),v._v(" "),e("p",[v._v("如果想要避免这个情况，可以设置一个"),e("code",[v._v("num={}")]),v._v("，然后在进行"),e("code",[v._v("num+[]")]),v._v("，这样结果就不是"),e("code",[v._v("0")])]),v._v(" "),e("h3",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[v._v("#")]),v._v(" !")]),v._v(" "),e("p",[e("code",[v._v("if (xx) or if (!xx)")]),v._v("都是 **Boolean(xx)**所提到的转换规则。")]),v._v(" "),e("h3",{attrs:{id:"or"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#or"}},[v._v("#")]),v._v(" && or ||")]),v._v(" "),e("p",[v._v("注意这两个返回结果并不是"),e("code",[v._v("false or true")]),v._v("。而是类似三元运算符的操作。")]),v._v(" "),e("h3",{attrs:{id:"关系运算符-or"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符-or"}},[v._v("#")]),v._v(" 关系运算符 - > or >=")]),v._v(" "),e("blockquote",[e("p",[v._v("如果经过了一次转换之后，还是不同的类型。就要继续实践转换规则。")])]),v._v(" "),e("p",[v._v("这个操作符的返回结果是"),e("code",[v._v("true or false")]),v._v("。")]),v._v(" "),e("p",[e("strong",[v._v("对于Boolean")]),v._v("，转换规则和"),e("code",[v._v("Number")]),v._v("中提到的一致")]),v._v(" "),e("p",[e("strong",[v._v("对于string")]),v._v("则保留")]),v._v(" "),e("p",[e("strong",[v._v("对于对象")]),v._v("，两种结合的转换规则，"),e("code",[v._v("valueof")]),v._v("的返回数值是"),e("code",[v._v("NaN")]),v._v("的话，那么就先调用"),e("code",[v._v("toString")]),v._v("，然后调用"),e("code",[v._v("valueOf")]),v._v("。如果"),e("code",[v._v("valueof")]),v._v("得到结果是"),e("code",[v._v("string")]),v._v("类型，则保留。")]),v._v(" "),e("p",[v._v("经过以上转换，可能两边的对象数据格式还是不同的。那么就进一步就要进行"),e("code",[v._v("string->number")]),v._v("的转换，转换规则和"),e("code",[v._v("Number")]),v._v("类似。")]),v._v(" "),e("h4",{attrs:{id:"需要转换为数值类型比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需要转换为数值类型比较"}},[v._v("#")]),v._v(" == - 需要转换为数值类型比较")]),v._v(" "),e("blockquote",[e("p",[v._v("这个转换规则也有点不同，"),e("strong",[v._v("前提是设计到了转换。")]),v._v(" 如果经过了一次转换之后，还是不同的类型。就要继续实践转换规则。")])]),v._v(" "),e("p",[e("strong",[v._v("对于字符串和Boolean")]),v._v("，转换规则和"),e("code",[v._v("Number")]),v._v("中提到的一致")]),v._v(" "),e("p",[e("strong",[v._v("对于对象")]),v._v("，只调用"),e("code",[v._v("valueof")]),v._v("。因为如果返回的是"),e("code",[v._v("NaN")]),v._v(",就进行"),e("code",[v._v("NaN")]),v._v("的相等比较。")]),v._v(" "),e("ul",[e("li",[v._v("只有一个"),e("code",[v._v("NaN")]),v._v(",判断是否等于"),e("code",[v._v("NaN")])]),v._v(" "),e("li",[v._v("两个"),e("code",[v._v("NaN")]),v._v("，永远是"),e("code",[v._v("false")])])]),v._v(" "),e("h4",{attrs:{id:"对象-对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象-对象"}},[v._v("#")]),v._v(" 对象 == 对象")]),v._v(" "),e("blockquote",[e("p",[v._v("同样也适用于对象 === 对象")])]),v._v(" "),e("p",[v._v("只要两边是对象，无论类型是否相等还是不相等，那么"),e("code",[v._v("== or ===")]),v._v("结果就是"),e("code",[v._v("false")])]),v._v(" "),e("ol",[e("li",[e("p",[v._v("比如"),e("code",[v._v("[1] == [1]")]),v._v("结果就是"),e("code",[v._v("false")]),v._v("，就连"),e("code",[v._v("Object.is(x, y)")]),v._v("的比较方法也救不了。")])]),v._v(" "),e("li",[e("p",[v._v("而且我们知道"),e("code",[v._v("typeof new Number(1)")]),v._v("得到的是"),e("code",[v._v("object")]),v._v("。所以，就会出现下面的情况：")]),v._v(" "),e("div",{staticClass:"language-JavaScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 值类型")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Number")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[v._v("==")]),v._v(" b "),e("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// false")]),v._v("\n")])])])])]),v._v(" "),e("h2",{attrs:{id:"关于undefined-and-null"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于undefined-and-null"}},[v._v("#")]),v._v(" 关于"),e("code",[v._v("undefined and null")])]),v._v(" "),e("ol",[e("li",[v._v("转换为"),e("code",[v._v("boolean")]),v._v("为"),e("code",[v._v("0")])]),v._v(" "),e("li",[v._v("转换为"),e("code",[v._v("string")]),v._v("分别为"),e("code",[v._v("'undefined' and 'null'")])]),v._v(" "),e("li",[v._v("转换为"),e("code",[v._v("number")]),v._v("，由第2点可以得到，两个都是"),e("code",[v._v("NaN")])])])])}),[],!1,null,null,null);_.default=a.exports}}]);